                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Wed Nov 16 08:04:28 2016
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc33880
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _print_var
                             13 	.globl _bank_fixed
                             14 	.globl _bank_3
                             15 	.globl _bank_2
                             16 	.globl _bank_1
                             17 	.globl _puts
                             18 	.globl _printf
                             19 	.globl _var_internal
                             20 	.globl _main
                             21 	.globl _print_var
                             22 	.globl _bank_fixed
                             23 ;--------------------------------------------------------
                             24 ; Externals used
                             25 ;--------------------------------------------------------
                             26 	.globl _IE_REG
                             27 	.globl _SVBK_REG
                             28 	.globl _OCPD_REG
                             29 	.globl _OCPS_REG
                             30 	.globl _BCPD_REG
                             31 	.globl _BCPS_REG
                             32 	.globl _RP_REG
                             33 	.globl _HDMA5_REG
                             34 	.globl _HDMA4_REG
                             35 	.globl _HDMA3_REG
                             36 	.globl _HDMA2_REG
                             37 	.globl _HDMA1_REG
                             38 	.globl _VBK_REG
                             39 	.globl _KEY1_REG
                             40 	.globl _WX_REG
                             41 	.globl _WY_REG
                             42 	.globl _OBP1_REG
                             43 	.globl _OBP0_REG
                             44 	.globl _BGP_REG
                             45 	.globl _DMA_REG
                             46 	.globl _LYC_REG
                             47 	.globl _LY_REG
                             48 	.globl _SCX_REG
                             49 	.globl _SCY_REG
                             50 	.globl _STAT_REG
                             51 	.globl _LCDC_REG
                             52 	.globl _NR52_REG
                             53 	.globl _NR51_REG
                             54 	.globl _NR50_REG
                             55 	.globl _NR44_REG
                             56 	.globl _NR43_REG
                             57 	.globl _NR42_REG
                             58 	.globl _NR41_REG
                             59 	.globl _NR34_REG
                             60 	.globl _NR33_REG
                             61 	.globl _NR32_REG
                             62 	.globl _NR31_REG
                             63 	.globl _NR30_REG
                             64 	.globl _NR24_REG
                             65 	.globl _NR23_REG
                             66 	.globl _NR22_REG
                             67 	.globl _NR21_REG
                             68 	.globl _NR14_REG
                             69 	.globl _NR13_REG
                             70 	.globl _NR12_REG
                             71 	.globl _NR11_REG
                             72 	.globl _NR10_REG
                             73 	.globl _IF_REG
                             74 	.globl _TAC_REG
                             75 	.globl _TMA_REG
                             76 	.globl _TIMA_REG
                             77 	.globl _DIV_REG
                             78 	.globl _SC_REG
                             79 	.globl _SB_REG
                             80 	.globl _P1_REG
                             81 	.globl _var_3
                             82 	.globl _var_2
                             83 	.globl _var_1
                             84 	.globl _var_0
                             85 	.globl __io_out
                             86 	.globl __io_in
                             87 	.globl __io_status
                             88 	.globl _sys_time
                             89 	.globl __cpu
                             90 ;--------------------------------------------------------
                             91 ; special function registers
                             92 ;--------------------------------------------------------
                             93 ;--------------------------------------------------------
                             94 ; special function bits 
                             95 ;--------------------------------------------------------
                             96 ;--------------------------------------------------------
                             97 ; internal ram data
                             98 ;--------------------------------------------------------
                             99 	.area _DATA
   0000                     100 _var_internal::
   0000                     101 	.ds 2
                            102 ;--------------------------------------------------------
                            103 ; overlayable items in internal ram 
                            104 ;--------------------------------------------------------
                            105 	.area _OVERLAY
                            106 ;--------------------------------------------------------
                            107 ; indirectly addressable internal ram data
                            108 ;--------------------------------------------------------
                            109 	.area _ISEG
                            110 ;--------------------------------------------------------
                            111 ; bit data
                            112 ;--------------------------------------------------------
                            113 	.area _BSEG
                            114 ;--------------------------------------------------------
                            115 ; external ram data
                            116 ;--------------------------------------------------------
                            117 	.area _XSEG
                            118 ;--------------------------------------------------------
                            119 ; global & static initialisations
                            120 ;--------------------------------------------------------
                            121 	.area _GSINIT
                            122 	.area _GSFINAL
                            123 	.area _GSINIT
                            124 ;--------------------------------------------------------
                            125 ; Home
                            126 ;--------------------------------------------------------
                            127 	.area _HOME
                            128 ;	banks.c 17
                            129 ; genLabel
                            130 ; genFunction
                            131 ;	---------------------------------
                            132 ; Function bank_fixed
                            133 ; ---------------------------------
   0000                     134 ___bank_fixed_start:
   0000                     135 _bank_fixed:
                            136 	
                            137 ;	banks.c 19
                            138 ; genIpush
   0000 21 0A 00            139 	ld	hl,#__str_0 + 0
   0003 E5                  140 	push	hl
                            141 ; genCall
   0004 CD 00 00            142 	call	_puts
   0007 E8 02               143 	lda	sp,2(sp)
                            144 ; genLabel
   0009                     145 00101$:
                            146 ; genEndFunction
                            147 	
   0009 C9                  148 	ret
   000A                     149 ___bank_fixed_end:
   000A                     150 __str_0:
   000A 49 27 6D 20 69 6E   151 	.ascii "I'm in fixed ROM"
        20 66 69 78 65 64
        20 52 4F 4D
   001A 00                  152 	.db 0x00
                            153 	.area _CODE
                            154 ;--------------------------------------------------------
                            155 ; code
                            156 ;--------------------------------------------------------
                            157 	.area _CODE
                            158 ;	banks.c 22
                            159 ; genLabel
                            160 ; genFunction
                            161 ;	---------------------------------
                            162 ; Function print_var
                            163 ; ---------------------------------
   0000                     164 ___print_var_start:
   0000                     165 _print_var:
                            166 	
                            167 ;	banks.c 24
                            168 ; genAssign
   0000 11 00 40            169 	ld	de,#0x4000
                            170 ; genAssign (pointer)
                            171 ; AOP_STK for 
   0003 F8 02               172 	lda	hl,2(sp)
   0005 7E                  173 	ld	a,(hl)
   0006 12                  174 	ld	(de),a
                            175 ;	banks.c 25
                            176 ; genIpush
   0007 21 11 00            177 	ld	hl,#__str_1 + 0
   000A E5                  178 	push	hl
                            179 ; genCall
   000B CD 00 00            180 	call	_printf
   000E E8 02               181 	lda	sp,2(sp)
                            182 ; genLabel
   0010                     183 00101$:
                            184 ; genEndFunction
                            185 	
   0010 C9                  186 	ret
   0011                     187 ___print_var_end:
   0011                     188 __str_1:
   0011 56 61 72 5F 25 75   189 	.ascii "Var_%u is %u"
        20 69 73 20 25 75
   001D 0A                  190 	.db 0x0A
   001E 00                  191 	.db 0x00
                            192 ;	banks.c 28
                            193 ; genLabel
                            194 ; genFunction
                            195 ;	---------------------------------
                            196 ; Function main
                            197 ; ---------------------------------
   001F                     198 ___main_start:
   001F                     199 _main:
                            200 	
                            201 ;	banks.c 30
                            202 ; genIpush
   001F 21 FE 00            203 	ld	hl,#__str_2 + 0
   0022 E5                  204 	push	hl
                            205 ; genCall
   0023 CD 00 00            206 	call	_puts
   0026 E8 02               207 	lda	sp,2(sp)
                            208 ;	banks.c 32
                            209 ; genAssign
   0028 11 00 00            210 	ld	de,#0x0000
                            211 ; genAssign (pointer)
   002B 3E 0A               212 	ld	a,#0x0A
   002D 12                  213 	ld	(de),a
                            214 ;	banks.c 33
                            215 ; genAssign
                            216 ; AOP_HL for _var_internal
   002E 21 00 00            217 	ld	hl,#_var_internal + 0
   0031 36 01               218 	ld	(hl),#0x01
   0033 23                  219 	inc	hl
   0034 36 00               220 	ld	(hl),#0x00
                            221 ;	banks.c 34
                            222 ; genAssign
   0036 11 00 40            223 	ld	de,#0x4000
                            224 ; genAssign (pointer)
   0039 3E 00               225 	ld	a,#0x00
   003B 12                  226 	ld	(de),a
                            227 ;	banks.c 35
                            228 ; genAssign
                            229 ; AOP_HL for _var_0
   003C 21 00 00            230 	ld	hl,#_var_0 + 0
   003F 36 02               231 	ld	(hl),#0x02
   0041 23                  232 	inc	hl
   0042 36 00               233 	ld	(hl),#0x00
                            234 ;	banks.c 36
                            235 ; genAssign
   0044 11 00 40            236 	ld	de,#0x4000
                            237 ; genAssign (pointer)
   0047 3E 01               238 	ld	a,#0x01
   0049 12                  239 	ld	(de),a
                            240 ;	banks.c 37
                            241 ; genAssign
                            242 ; AOP_HL for _var_1
   004A 21 00 00            243 	ld	hl,#_var_1 + 0
   004D 36 03               244 	ld	(hl),#0x03
   004F 23                  245 	inc	hl
   0050 36 00               246 	ld	(hl),#0x00
                            247 ;	banks.c 38
                            248 ; genAssign
   0052 11 00 40            249 	ld	de,#0x4000
                            250 ; genAssign (pointer)
   0055 3E 02               251 	ld	a,#0x02
   0057 12                  252 	ld	(de),a
                            253 ;	banks.c 39
                            254 ; genAssign
                            255 ; AOP_HL for _var_2
   0058 21 00 00            256 	ld	hl,#_var_2 + 0
   005B 36 04               257 	ld	(hl),#0x04
   005D 23                  258 	inc	hl
   005E 36 00               259 	ld	(hl),#0x00
                            260 ;	banks.c 40
                            261 ; genAssign
   0060 11 00 40            262 	ld	de,#0x4000
                            263 ; genAssign (pointer)
   0063 3E 03               264 	ld	a,#0x03
   0065 12                  265 	ld	(de),a
                            266 ;	banks.c 41
                            267 ; genAssign
                            268 ; AOP_HL for _var_3
   0066 21 00 00            269 	ld	hl,#_var_3 + 0
   0069 36 05               270 	ld	(hl),#0x05
   006B 23                  271 	inc	hl
   006C 36 00               272 	ld	(hl),#0x00
                            273 ;	banks.c 43
                            274 ; genCall
   006E CD 00 00            275 	call	_bank_fixed
                            276 ;	banks.c 44
                            277 ; genAssign
   0071 11 00 20            278 	ld	de,#0x2000
                            279 ; genAssign (pointer)
   0074 3E 01               280 	ld	a,#0x01
   0076 12                  281 	ld	(de),a
                            282 ;	banks.c 45
                            283 ; genCall
   0077 CD 00 00            284 	call	_bank_1
                            285 ;	banks.c 46
                            286 ; genAssign
   007A 11 00 20            287 	ld	de,#0x2000
                            288 ; genAssign (pointer)
   007D 3E 02               289 	ld	a,#0x02
   007F 12                  290 	ld	(de),a
                            291 ;	banks.c 47
                            292 ; genCall
   0080 CD 00 00            293 	call	_bank_2
                            294 ;	banks.c 48
                            295 ; genAssign
   0083 11 00 20            296 	ld	de,#0x2000
                            297 ; genAssign (pointer)
   0086 3E 03               298 	ld	a,#0x03
   0088 12                  299 	ld	(de),a
                            300 ;	banks.c 49
                            301 ; genCall
   0089 CD 00 00            302 	call	_bank_3
                            303 ;	banks.c 51
                            304 ; genIpush
                            305 ; AOP_HL for _var_internal
   008C 21 00 00            306 	ld	hl,#_var_internal + 0
   008F 2A                  307 	ld	a,(hl+)
   0090 66                  308 	ld	h,(hl)
   0091 6F                  309 	ld	l,a
   0092 E5                  310 	push	hl
                            311 ; genIpush
   0093 21 0F 01            312 	ld	hl,#__str_3 + 0
   0096 E5                  313 	push	hl
                            314 ; genCall
   0097 CD 00 00            315 	call	_printf
   009A E8 04               316 	lda	sp,4(sp)
                            317 ;	banks.c 52
                            318 ; genAssign
   009C 11 00 40            319 	ld	de,#0x4000
                            320 ; genAssign (pointer)
   009F 3E 00               321 	ld	a,#0x00
   00A1 12                  322 	ld	(de),a
                            323 ;	banks.c 53
                            324 ; genIpush
                            325 ; AOP_HL for _var_0
   00A2 21 00 00            326 	ld	hl,#_var_0 + 0
   00A5 2A                  327 	ld	a,(hl+)
   00A6 66                  328 	ld	h,(hl)
   00A7 6F                  329 	ld	l,a
   00A8 E5                  330 	push	hl
                            331 ; genIpush
   00A9 21 1A 01            332 	ld	hl,#__str_4 + 0
   00AC E5                  333 	push	hl
                            334 ; genCall
   00AD CD 00 00            335 	call	_printf
   00B0 E8 04               336 	lda	sp,4(sp)
                            337 ;	banks.c 54
                            338 ; genAssign
   00B2 11 00 40            339 	ld	de,#0x4000
                            340 ; genAssign (pointer)
   00B5 3E 01               341 	ld	a,#0x01
   00B7 12                  342 	ld	(de),a
                            343 ;	banks.c 55
                            344 ; genIpush
                            345 ; AOP_HL for _var_1
   00B8 21 00 00            346 	ld	hl,#_var_1 + 0
   00BB 2A                  347 	ld	a,(hl+)
   00BC 66                  348 	ld	h,(hl)
   00BD 6F                  349 	ld	l,a
   00BE E5                  350 	push	hl
                            351 ; genIpush
   00BF 21 27 01            352 	ld	hl,#__str_5 + 0
   00C2 E5                  353 	push	hl
                            354 ; genCall
   00C3 CD 00 00            355 	call	_printf
   00C6 E8 04               356 	lda	sp,4(sp)
                            357 ;	banks.c 56
                            358 ; genAssign
   00C8 11 00 40            359 	ld	de,#0x4000
                            360 ; genAssign (pointer)
   00CB 3E 02               361 	ld	a,#0x02
   00CD 12                  362 	ld	(de),a
                            363 ;	banks.c 57
                            364 ; genIpush
                            365 ; AOP_HL for _var_2
   00CE 21 00 00            366 	ld	hl,#_var_2 + 0
   00D1 2A                  367 	ld	a,(hl+)
   00D2 66                  368 	ld	h,(hl)
   00D3 6F                  369 	ld	l,a
   00D4 E5                  370 	push	hl
                            371 ; genIpush
   00D5 21 34 01            372 	ld	hl,#__str_6 + 0
   00D8 E5                  373 	push	hl
                            374 ; genCall
   00D9 CD 00 00            375 	call	_printf
   00DC E8 04               376 	lda	sp,4(sp)
                            377 ;	banks.c 58
                            378 ; genAssign
   00DE 11 00 40            379 	ld	de,#0x4000
                            380 ; genAssign (pointer)
   00E1 3E 03               381 	ld	a,#0x03
   00E3 12                  382 	ld	(de),a
                            383 ;	banks.c 59
                            384 ; genIpush
                            385 ; AOP_HL for _var_3
   00E4 21 00 00            386 	ld	hl,#_var_3 + 0
   00E7 2A                  387 	ld	a,(hl+)
   00E8 66                  388 	ld	h,(hl)
   00E9 6F                  389 	ld	l,a
   00EA E5                  390 	push	hl
                            391 ; genIpush
   00EB 21 41 01            392 	ld	hl,#__str_7 + 0
   00EE E5                  393 	push	hl
                            394 ; genCall
   00EF CD 00 00            395 	call	_printf
   00F2 E8 04               396 	lda	sp,4(sp)
                            397 ;	banks.c 61
                            398 ; genIpush
   00F4 21 4E 01            399 	ld	hl,#__str_8 + 0
   00F7 E5                  400 	push	hl
                            401 ; genCall
   00F8 CD 00 00            402 	call	_puts
   00FB E8 02               403 	lda	sp,2(sp)
                            404 ; genLabel
   00FD                     405 00101$:
                            406 ; genEndFunction
                            407 	
   00FD C9                  408 	ret
   00FE                     409 ___main_end:
   00FE                     410 __str_2:
   00FE 50 72 6F 67 72 61   411 	.ascii "Program Start..."
        6D 20 53 74 61 72
        74 2E 2E 2E
   010E 00                  412 	.db 0x00
   010F                     413 __str_3:
   010F 56 61 72 20 69 73   414 	.ascii "Var is %u"
        20 25 75
   0118 0A                  415 	.db 0x0A
   0119 00                  416 	.db 0x00
   011A                     417 __str_4:
   011A 56 61 72 5F 30 20   418 	.ascii "Var_0 is %u"
        69 73 20 25 75
   0125 0A                  419 	.db 0x0A
   0126 00                  420 	.db 0x00
   0127                     421 __str_5:
   0127 56 61 72 5F 31 20   422 	.ascii "Var_1 is %u"
        69 73 20 25 75
   0132 0A                  423 	.db 0x0A
   0133 00                  424 	.db 0x00
   0134                     425 __str_6:
   0134 56 61 72 5F 32 20   426 	.ascii "Var_2 is %u"
        69 73 20 25 75
   013F 0A                  427 	.db 0x0A
   0140 00                  428 	.db 0x00
   0141                     429 __str_7:
   0141 56 61 72 5F 33 20   430 	.ascii "Var_3 is %u"
        69 73 20 25 75
   014C 0A                  431 	.db 0x0A
   014D 00                  432 	.db 0x00
   014E                     433 __str_8:
   014E 54 68 65 20 45 6E   434 	.ascii "The End..."
        64 2E 2E 2E
   0158 00                  435 	.db 0x00
                            436 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  8 ___bank_fixed_end                  000A R
  8 ___bank_fixed_start                0000 R
  0 ___main_end                        00FE R
  0 ___main_start                      001F R
  0 ___print_var_end                   0011 R
  0 ___print_var_start                 0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  8 __str_0                            000A R
  0 __str_1                            0011 R
  0 __str_2                            00FE R
  0 __str_3                            010F R
  0 __str_4                            011A R
  0 __str_5                            0127 R
  0 __str_6                            0134 R
  0 __str_7                            0141 R
  0 __str_8                            014E R
    _bank_1                            **** GX
    _bank_2                            **** GX
    _bank_3                            **** GX
  8 _bank_fixed                        0000 GR
  0 _main                              001F GR
  0 _print_var                         0000 GR
    _printf                            **** GX
    _puts                              **** GX
    _sys_time                          **** GX
    _var_0                             **** GX
    _var_1                             **** GX
    _var_2                             **** GX
    _var_3                             **** GX
  1 _var_internal                      0000 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  159   flags 0
   1 _DATA                              size    2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size   1B   flags 0
