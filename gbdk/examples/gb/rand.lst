                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Wed Nov 16 08:04:23 2016
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc73480
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _puts
                             13 	.globl _plot
                             14 	.globl _arand
                             15 	.globl _initarand
                             16 	.globl _rand
                             17 	.globl _waitpadup
                             18 	.globl _waitpad
                             19 	.globl _seed
                             20 	.globl _accua
                             21 	.globl _accu
                             22 	.globl _main
                             23 ;--------------------------------------------------------
                             24 ; Externals used
                             25 ;--------------------------------------------------------
                             26 	.globl _IE_REG
                             27 	.globl _SVBK_REG
                             28 	.globl _OCPD_REG
                             29 	.globl _OCPS_REG
                             30 	.globl _BCPD_REG
                             31 	.globl _BCPS_REG
                             32 	.globl _RP_REG
                             33 	.globl _HDMA5_REG
                             34 	.globl _HDMA4_REG
                             35 	.globl _HDMA3_REG
                             36 	.globl _HDMA2_REG
                             37 	.globl _HDMA1_REG
                             38 	.globl _VBK_REG
                             39 	.globl _KEY1_REG
                             40 	.globl _WX_REG
                             41 	.globl _WY_REG
                             42 	.globl _OBP1_REG
                             43 	.globl _OBP0_REG
                             44 	.globl _BGP_REG
                             45 	.globl _DMA_REG
                             46 	.globl _LYC_REG
                             47 	.globl _LY_REG
                             48 	.globl _SCX_REG
                             49 	.globl _SCY_REG
                             50 	.globl _STAT_REG
                             51 	.globl _LCDC_REG
                             52 	.globl _NR52_REG
                             53 	.globl _NR51_REG
                             54 	.globl _NR50_REG
                             55 	.globl _NR44_REG
                             56 	.globl _NR43_REG
                             57 	.globl _NR42_REG
                             58 	.globl _NR41_REG
                             59 	.globl _NR34_REG
                             60 	.globl _NR33_REG
                             61 	.globl _NR32_REG
                             62 	.globl _NR31_REG
                             63 	.globl _NR30_REG
                             64 	.globl _NR24_REG
                             65 	.globl _NR23_REG
                             66 	.globl _NR22_REG
                             67 	.globl _NR21_REG
                             68 	.globl _NR14_REG
                             69 	.globl _NR13_REG
                             70 	.globl _NR12_REG
                             71 	.globl _NR11_REG
                             72 	.globl _NR10_REG
                             73 	.globl _IF_REG
                             74 	.globl _TAC_REG
                             75 	.globl _TMA_REG
                             76 	.globl _TIMA_REG
                             77 	.globl _DIV_REG
                             78 	.globl _SC_REG
                             79 	.globl _SB_REG
                             80 	.globl _P1_REG
                             81 	.globl __io_out
                             82 	.globl __io_in
                             83 	.globl __io_status
                             84 	.globl _sys_time
                             85 	.globl __cpu
                             86 ;--------------------------------------------------------
                             87 ; special function registers
                             88 ;--------------------------------------------------------
                             89 ;--------------------------------------------------------
                             90 ; special function bits 
                             91 ;--------------------------------------------------------
                             92 ;--------------------------------------------------------
                             93 ; internal ram data
                             94 ;--------------------------------------------------------
                             95 	.area _DATA
   0000                      96 _accu::
   0000                      97 	.ds 80
   0050                      98 _accua::
   0050                      99 	.ds 80
   00A0                     100 _seed::
   00A0                     101 	.ds 2
                            102 ;--------------------------------------------------------
                            103 ; overlayable items in internal ram 
                            104 ;--------------------------------------------------------
                            105 	.area _OVERLAY
                            106 ;--------------------------------------------------------
                            107 ; indirectly addressable internal ram data
                            108 ;--------------------------------------------------------
                            109 	.area _ISEG
                            110 ;--------------------------------------------------------
                            111 ; bit data
                            112 ;--------------------------------------------------------
                            113 	.area _BSEG
                            114 ;--------------------------------------------------------
                            115 ; external ram data
                            116 ;--------------------------------------------------------
                            117 	.area _XSEG
                            118 ;--------------------------------------------------------
                            119 ; global & static initialisations
                            120 ;--------------------------------------------------------
                            121 	.area _GSINIT
                            122 	.area _GSFINAL
                            123 	.area _GSINIT
                            124 ;--------------------------------------------------------
                            125 ; Home
                            126 ;--------------------------------------------------------
                            127 	.area _HOME
                            128 	.area _CODE
                            129 ;--------------------------------------------------------
                            130 ; code
                            131 ;--------------------------------------------------------
                            132 	.area _CODE
                            133 ;	rand.c 23
                            134 ; genLabel
                            135 ; genFunction
                            136 ;	---------------------------------
                            137 ; Function main
                            138 ; ---------------------------------
   0000                     139 ___main_start:
   0000                     140 _main:
   0000 C5                  141 	push	bc
   0001 E8 F7               142 	lda	sp,-9(sp)
                            143 ;	rand.c 27
                            144 ; genAssign
                            145 ; AOP_STK for _main_r_1_1
   0003 F8 08               146 	lda	hl,8(sp)
   0005 36 00               147 	ld	(hl),#0x00
                            148 ; genLabel
   0007                     149 00109$:
                            150 ; genCmpEq
                            151 ; AOP_STK for _main_r_1_1
   0007 F8 08               152 	lda	hl,8(sp)
   0009 7E                  153 	ld	a,(hl) ; 2
   000A FE 50               154 	cp	a,#0x50
                            155 ; Rule 5
   000C CA 31 00            156 	jp	z,00112$
   000F                     157 00121$:
                            158 ;	rand.c 28
                            159 ; genPlus
                            160 ; AOP_STK for _main_r_1_1
                            161 ;	genPlusIncr failed
   000F 11 00 00            162 	ld	de,#_accu + 0
   0012 F8 08               163 	lda	hl,8(sp)
   0014 6E                  164 	ld	l,(hl)
   0015 26 00               165 	ld	h,#0x00
   0017 19                  166 	add	hl,de
   0018 5D                  167 	ld	e,l
   0019 54                  168 	ld	d,h
                            169 ; genAssign (pointer)
   001A 3E 00               170 	ld	a,#0x00
   001C 12                  171 	ld	(de),a
                            172 ;	rand.c 29
                            173 ; genPlus
                            174 ; AOP_STK for _main_r_1_1
                            175 ;	genPlusIncr failed
   001D 11 50 00            176 	ld	de,#_accua + 0
   0020 F8 08               177 	lda	hl,8(sp)
   0022 6E                  178 	ld	l,(hl)
   0023 26 00               179 	ld	h,#0x00
   0025 19                  180 	add	hl,de
   0026 5D                  181 	ld	e,l
   0027 54                  182 	ld	d,h
                            183 ; genAssign (pointer)
   0028 3E 00               184 	ld	a,#0x00
   002A 12                  185 	ld	(de),a
                            186 ;	rand.c 27
                            187 ; genPlus
                            188 ; AOP_STK for _main_r_1_1
                            189 ; genPlusIncr
   002B F8 08               190 	lda	hl,8(sp)
   002D 34                  191 	inc	(hl)
                            192 ; genGoto
   002E C3 07 00            193 	jp	00109$
                            194 ; genLabel
   0031                     195 00112$:
                            196 ;	rand.c 33
                            197 ; genIpush
   0031 21 35 01            198 	ld	hl,#__str_0 + 0
   0034 E5                  199 	push	hl
                            200 ; genCall
   0035 CD 00 00            201 	call	_puts
   0038 E8 02               202 	lda	sp,2(sp)
                            203 ;	rand.c 34
                            204 ; genIpush
   003A 21 42 01            205 	ld	hl,#__str_1 + 0
   003D E5                  206 	push	hl
                            207 ; genCall
   003E CD 00 00            208 	call	_puts
   0041 E8 02               209 	lda	sp,2(sp)
                            210 ;	rand.c 35
                            211 ; genIpush
   0043 3E FF               212 	ld	a,#0xFF
   0045 F5                  213 	push	af
   0046 33                  214 	inc	sp
                            215 ; genCall
   0047 CD 00 00            216 	call	_waitpad
   004A E8 01               217 	lda	sp,1(sp)
                            218 ;	rand.c 36
                            219 ; genCall
   004C CD 00 00            220 	call	_waitpadup
                            221 ;	rand.c 37
                            222 ; genCast
                            223 ; AOP_SFR for _DIV_REG
                            224 ; AOP_HL for _seed
   004F F0 00               225 	ldh	a,(_DIV_REG+0) ; x
   0051 21 A0 00            226 	ld	hl,#_seed + 0
   0054 22                  227 	ld	(hl+),a
   0055 36 00               228 	ld	(hl),#0x00
                            229 ;	rand.c 38
                            230 ; genIpush
   0057 21 53 01            231 	ld	hl,#__str_2 + 0
   005A E5                  232 	push	hl
                            233 ; genCall
   005B CD 00 00            234 	call	_puts
   005E E8 02               235 	lda	sp,2(sp)
                            236 ;	rand.c 39
                            237 ; genIpush
   0060 3E FF               238 	ld	a,#0xFF
   0062 F5                  239 	push	af
   0063 33                  240 	inc	sp
                            241 ; genCall
   0064 CD 00 00            242 	call	_waitpad
   0067 E8 01               243 	lda	sp,1(sp)
                            244 ;	rand.c 40
                            245 ; genCall
   0069 CD 00 00            246 	call	_waitpadup
                            247 ;	rand.c 41
                            248 ; genCast
                            249 ; AOP_SFR for _DIV_REG
   006C F0 00               250 	ldh	a,(_DIV_REG+0) ; x
   006E 47                  251 	ld	b,a
   006F 0E 00               252 	ld	c,#0x00
                            253 ; genLeftShift
   0071 48                  254 	ld	c,b
   0072 06 00               255 	ld	b,#0x00
                            256 ; genOr
                            257 ; AOP_HL for _seed
                            258 ; Type res[10] = l[10]&r[2]
                            259 ; Size res[2] = l[2]&r[2]
   0074 21 A0 00            260 	ld	hl,#_seed + 0
   0077 7E                  261 	ld	a,(hl)
   0078 B0                  262 	or	a,b
   0079 22                  263 	ld	(hl+),a
   007A 7E                  264 	ld	a,(hl)
   007B B1                  265 	or	a,c
   007C 77                  266 	ld	(hl),a
                            267 ;	rand.c 44
                            268 ; genIpush
                            269 ; AOP_HL for _seed
   007D 2B                  270 	dec	hl
   007E 2A                  271 	ld	a,(hl+)
   007F 66                  272 	ld	h,(hl)
   0080 6F                  273 	ld	l,a
   0081 E5                  274 	push	hl
                            275 ; genCall
   0082 CD 00 00            276 	call	_initarand
   0085 E8 02               277 	lda	sp,2(sp)
                            278 ;	rand.c 46
                            279 ; genLabel
   0087                     280 00106$:
                            281 ;	rand.c 47
                            282 ; genCall
   0087 CD 00 00            283 	call	_rand
                            284 ; AOP_STK for _main_r_1_1
   008A F8 08               285 	lda	hl,8(sp)
   008C 73                  286 	ld	(hl),e
                            287 ;	rand.c 48
                            288 ; genCall
   008D CD 00 00            289 	call	_arand
                            290 ; AOP_STK for _main_s_1_1
   0090 F8 07               291 	lda	hl,7(sp)
   0092 73                  292 	ld	(hl),e
                            293 ;	rand.c 50
                            294 ; genCmpLt
                            295 ; AOP_STK for _main_r_1_1
   0093 23                  296 	inc	hl
   0094 7E                  297 	ld	a,(hl)
   0095 FE 50               298 	cp	#0x50
   0097 D2 D5 00            299 	jp	nc,00102$
                            300 ;	rand.c 51
                            301 ; genPlus
                            302 ; AOP_STK for _main_r_1_1
                            303 ; AOP_STK for _main_sloc1_1_0
                            304 ;	genPlusIncr failed
   009A 11 00 00            305 	ld	de,#_accu + 0
   009D 6E                  306 	ld	l,(hl)
   009E 26 00               307 	ld	h,#0x00
   00A0 19                  308 	add	hl,de
   00A1 7D                  309 	ld	a,l
   00A2 54                  310 	ld	d,h
   00A3 F8 02               311 	lda	hl,2(sp)
   00A5 22                  312 	ld	(hl+),a
   00A6 72                  313 	ld	(hl),d
                            314 ; genPointerGet
                            315 ; AOP_STK for _main_sloc1_1_0
                            316 ; AOP_STK for _main_sloc0_1_0
   00A7 2B                  317 	dec	hl
   00A8 5E                  318 	ld	e,(hl)
   00A9 23                  319 	inc	hl
   00AA 56                  320 	ld	d,(hl)
   00AB 1A                  321 	ld	a,(de)
   00AC 23                  322 	inc	hl
   00AD 77                  323 	ld	(hl),a
                            324 ; genPlus
                            325 ; AOP_STK for _main_sloc0_1_0
                            326 ; genPlusIncr
                            327 ;	genPlusIncr failed
   00AE 7E                  328 	ld	a,(hl)
   00AF C6 01               329 	add	a,#0x01
   00B1 4F                  330 	ld	c,a
                            331 ; genAssign (pointer)
                            332 ; AOP_STK for _main_sloc1_1_0
   00B2 2B                  333 	dec	hl
   00B3 2B                  334 	dec	hl
   00B4 5E                  335 	ld	e,(hl)
   00B5 23                  336 	inc	hl
   00B6 56                  337 	ld	d,(hl)
   00B7 79                  338 	ld	a,c
   00B8 12                  339 	ld	(de),a
                            340 ; genAssign
                            341 ; AOP_STK for _main_t_1_1
   00B9 F8 06               342 	lda	hl,6(sp)
   00BB 71                  343 	ld	(hl),c
                            344 ;	rand.c 52
                            345 ; genMinus
                            346 ; AOP_STK for _main_t_1_1
   00BC 3E 90               347 	ld	a,#0x90
   00BE 96                  348 	sub	a,(hl)
   00BF 47                  349 	ld	b,a
                            350 ; genIpush
   00C0 3E 00               351 	ld	a,#0x00
   00C2 F5                  352 	push	af
   00C3 33                  353 	inc	sp
                            354 ; genIpush
   00C4 3E 01               355 	ld	a,#0x01
   00C6 F5                  356 	push	af
   00C7 33                  357 	inc	sp
                            358 ; genIpush
   00C8 78                  359 	ld	a,b
   00C9 F5                  360 	push	af
   00CA 33                  361 	inc	sp
                            362 ; genIpush
                            363 ; AOP_STK for _main_r_1_1
   00CB 23                  364 	inc	hl
   00CC 23                  365 	inc	hl
   00CD 7E                  366 	ld	a,(hl)
   00CE F5                  367 	push	af
   00CF 33                  368 	inc	sp
                            369 ; genCall
   00D0 CD 00 00            370 	call	_plot
   00D3 E8 04               371 	lda	sp,4(sp)
                            372 ; genLabel
   00D5                     373 00102$:
                            374 ;	rand.c 54
                            375 ; genCmpLt
                            376 ; AOP_STK for _main_s_1_1
   00D5 F8 07               377 	lda	hl,7(sp)
   00D7 7E                  378 	ld	a,(hl)
   00D8 FE 50               379 	cp	#0x50
   00DA D2 1C 01            380 	jp	nc,00107$
                            381 ;	rand.c 55
                            382 ; genPlus
                            383 ; AOP_STK for _main_s_1_1
                            384 ; AOP_STK for _main_sloc2_1_0
                            385 ;	genPlusIncr failed
   00DD 11 50 00            386 	ld	de,#_accua + 0
   00E0 6E                  387 	ld	l,(hl)
   00E1 26 00               388 	ld	h,#0x00
   00E3 19                  389 	add	hl,de
   00E4 7D                  390 	ld	a,l
   00E5 54                  391 	ld	d,h
   00E6 F8 00               392 	lda	hl,0(sp)
   00E8 22                  393 	ld	(hl+),a
   00E9 72                  394 	ld	(hl),d
                            395 ; genPointerGet
                            396 ; AOP_STK for _main_sloc2_1_0
                            397 ; AOP_STK for _main_sloc1_1_0
   00EA 2B                  398 	dec	hl
   00EB 5E                  399 	ld	e,(hl)
   00EC 23                  400 	inc	hl
   00ED 56                  401 	ld	d,(hl)
   00EE 1A                  402 	ld	a,(de)
   00EF 23                  403 	inc	hl
   00F0 77                  404 	ld	(hl),a
                            405 ; genPlus
                            406 ; AOP_STK for _main_sloc1_1_0
                            407 ; genPlusIncr
                            408 ;	genPlusIncr failed
   00F1 7E                  409 	ld	a,(hl)
   00F2 C6 01               410 	add	a,#0x01
   00F4 4F                  411 	ld	c,a
                            412 ; genAssign (pointer)
                            413 ; AOP_STK for _main_sloc2_1_0
   00F5 2B                  414 	dec	hl
   00F6 2B                  415 	dec	hl
   00F7 5E                  416 	ld	e,(hl)
   00F8 23                  417 	inc	hl
   00F9 56                  418 	ld	d,(hl)
   00FA 79                  419 	ld	a,c
   00FB 12                  420 	ld	(de),a
                            421 ; genAssign
                            422 ; AOP_STK for _main_u_1_1
   00FC F8 05               423 	lda	hl,5(sp)
   00FE 71                  424 	ld	(hl),c
                            425 ;	rand.c 56
                            426 ; genMinus
                            427 ; AOP_STK for _main_u_1_1
   00FF 3E 90               428 	ld	a,#0x90
   0101 96                  429 	sub	a,(hl)
   0102 47                  430 	ld	b,a
                            431 ; genPlus
                            432 ; AOP_STK for _main_s_1_1
                            433 ; genPlusIncr
                            434 ;	genPlusIncr failed
   0103 23                  435 	inc	hl
   0104 23                  436 	inc	hl
   0105 7E                  437 	ld	a,(hl)
   0106 C6 50               438 	add	a,#0x50
   0108 4F                  439 	ld	c,a
                            440 ; genIpush
   0109 3E 00               441 	ld	a,#0x00
   010B F5                  442 	push	af
   010C 33                  443 	inc	sp
                            444 ; genIpush
   010D 3E 02               445 	ld	a,#0x02
   010F F5                  446 	push	af
   0110 33                  447 	inc	sp
                            448 ; genIpush
   0111 78                  449 	ld	a,b
   0112 F5                  450 	push	af
   0113 33                  451 	inc	sp
                            452 ; genIpush
   0114 79                  453 	ld	a,c
   0115 F5                  454 	push	af
   0116 33                  455 	inc	sp
                            456 ; genCall
   0117 CD 00 00            457 	call	_plot
   011A E8 04               458 	lda	sp,4(sp)
                            459 ; genLabel
   011C                     460 00107$:
                            461 ;	rand.c 59
                            462 ; genCmpEq
                            463 ; AOP_STK for _main_t_1_1
   011C F8 06               464 	lda	hl,6(sp)
   011E 7E                  465 	ld	a,(hl) ; 2
   011F FE 90               466 	cp	a,#0x90
                            467 ; Rule 5
   0121 CA 31 01            468 	jp	z,00113$
   0124                     469 00122$:
                            470 ; genCmpEq
                            471 ; AOP_STK for _main_u_1_1
   0124 F8 05               472 	lda	hl,5(sp)
   0126 7E                  473 	ld	a,(hl) ; 2
   0127 FE 90               474 	cp	a,#0x90
   0129 C2 2E 01            475 	jp	nz,00123$
   012C 18 03               476 	jr	00124$
   012E                     477 00123$:
   012E C3 87 00            478 	jp	00106$
   0131                     479 00124$:
                            480 ; genLabel
   0131                     481 00113$:
                            482 ; genEndFunction
   0131 E8 09               483 	lda	sp,9(sp)
   0133 C1                  484 	pop	bc
   0134 C9                  485 	ret
   0135                     486 ___main_end:
   0135                     487 __str_0:
   0135 47 65 74 74 69 6E   488 	.ascii "Getting seed"
        67 20 73 65 65 64
   0141 00                  489 	.db 0x00
   0142                     490 __str_1:
   0142 50 75 73 68 20 61   491 	.ascii "Push any key (1)"
        6E 79 20 6B 65 79
        20 28 31 29
   0152 00                  492 	.db 0x00
   0153                     493 __str_2:
   0153 50 75 73 68 20 61   494 	.ascii "Push any key (2)"
        6E 79 20 6B 65 79
        20 28 32 29
   0163 00                  495 	.db 0x00
                            496 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        0135 R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            0135 R
  0 __str_1                            0142 R
  0 __str_2                            0153 R
  1 _accu                              0000 GR
  1 _accua                             0050 GR
    _arand                             **** GX
    _initarand                         **** GX
  0 _main                              0000 GR
    _plot                              **** GX
    _puts                              **** GX
    _rand                              **** GX
  1 _seed                              00A0 GR
    _sys_time                          **** GX
    _waitpad                           **** GX
    _waitpadup                         **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  164   flags 0
   1 _DATA                              size   A2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
