                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Wed Nov 16 08:04:24 2016
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc63120
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _print_counter
                             13 	.globl _tim
                             14 	.globl _vbl
                             15 	.globl _printf
                             16 	.globl _posy
                             17 	.globl _gotoxy
                             18 	.globl _set_interrupts
                             19 	.globl _disable_interrupts
                             20 	.globl _enable_interrupts
                             21 	.globl _delay
                             22 	.globl _add_TIM
                             23 	.globl _add_VBL
                             24 	.globl _tim_cnt
                             25 	.globl _vbl_cnt
                             26 	.globl _main
                             27 	.globl _print_counter
                             28 	.globl _tim
                             29 	.globl _vbl
                             30 ;--------------------------------------------------------
                             31 ; Externals used
                             32 ;--------------------------------------------------------
                             33 	.globl _IE_REG
                             34 	.globl _SVBK_REG
                             35 	.globl _OCPD_REG
                             36 	.globl _OCPS_REG
                             37 	.globl _BCPD_REG
                             38 	.globl _BCPS_REG
                             39 	.globl _RP_REG
                             40 	.globl _HDMA5_REG
                             41 	.globl _HDMA4_REG
                             42 	.globl _HDMA3_REG
                             43 	.globl _HDMA2_REG
                             44 	.globl _HDMA1_REG
                             45 	.globl _VBK_REG
                             46 	.globl _KEY1_REG
                             47 	.globl _WX_REG
                             48 	.globl _WY_REG
                             49 	.globl _OBP1_REG
                             50 	.globl _OBP0_REG
                             51 	.globl _BGP_REG
                             52 	.globl _DMA_REG
                             53 	.globl _LYC_REG
                             54 	.globl _LY_REG
                             55 	.globl _SCX_REG
                             56 	.globl _SCY_REG
                             57 	.globl _STAT_REG
                             58 	.globl _LCDC_REG
                             59 	.globl _NR52_REG
                             60 	.globl _NR51_REG
                             61 	.globl _NR50_REG
                             62 	.globl _NR44_REG
                             63 	.globl _NR43_REG
                             64 	.globl _NR42_REG
                             65 	.globl _NR41_REG
                             66 	.globl _NR34_REG
                             67 	.globl _NR33_REG
                             68 	.globl _NR32_REG
                             69 	.globl _NR31_REG
                             70 	.globl _NR30_REG
                             71 	.globl _NR24_REG
                             72 	.globl _NR23_REG
                             73 	.globl _NR22_REG
                             74 	.globl _NR21_REG
                             75 	.globl _NR14_REG
                             76 	.globl _NR13_REG
                             77 	.globl _NR12_REG
                             78 	.globl _NR11_REG
                             79 	.globl _NR10_REG
                             80 	.globl _IF_REG
                             81 	.globl _TAC_REG
                             82 	.globl _TMA_REG
                             83 	.globl _TIMA_REG
                             84 	.globl _DIV_REG
                             85 	.globl _SC_REG
                             86 	.globl _SB_REG
                             87 	.globl _P1_REG
                             88 	.globl __io_out
                             89 	.globl __io_in
                             90 	.globl __io_status
                             91 	.globl _sys_time
                             92 	.globl __cpu
                             93 ;--------------------------------------------------------
                             94 ; special function registers
                             95 ;--------------------------------------------------------
                             96 ;--------------------------------------------------------
                             97 ; special function bits 
                             98 ;--------------------------------------------------------
                             99 ;--------------------------------------------------------
                            100 ; internal ram data
                            101 ;--------------------------------------------------------
                            102 	.area _DATA
   0000                     103 _vbl_cnt::
   0000                     104 	.ds 1
   0001                     105 _tim_cnt::
   0001                     106 	.ds 1
                            107 ;--------------------------------------------------------
                            108 ; overlayable items in internal ram 
                            109 ;--------------------------------------------------------
                            110 	.area _OVERLAY
                            111 ;--------------------------------------------------------
                            112 ; indirectly addressable internal ram data
                            113 ;--------------------------------------------------------
                            114 	.area _ISEG
                            115 ;--------------------------------------------------------
                            116 ; bit data
                            117 ;--------------------------------------------------------
                            118 	.area _BSEG
                            119 ;--------------------------------------------------------
                            120 ; external ram data
                            121 ;--------------------------------------------------------
                            122 	.area _XSEG
                            123 ;--------------------------------------------------------
                            124 ; global & static initialisations
                            125 ;--------------------------------------------------------
                            126 	.area _GSINIT
                            127 	.area _GSFINAL
                            128 	.area _GSINIT
                            129 ;--------------------------------------------------------
                            130 ; Home
                            131 ;--------------------------------------------------------
                            132 	.area _HOME
                            133 	.area _CODE
                            134 ;--------------------------------------------------------
                            135 ; code
                            136 ;--------------------------------------------------------
                            137 	.area _CODE
                            138 ;	irq.c 8
                            139 ; genLabel
                            140 ; genFunction
                            141 ;	---------------------------------
                            142 ; Function vbl
                            143 ; ---------------------------------
   0000                     144 ___vbl_start:
   0000                     145 _vbl:
                            146 	
                            147 ;	irq.c 11
                            148 ; genPlus
                            149 ; AOP_HL for _vbl_cnt
                            150 ; genPlusIncr
   0000 21 00 00            151 	ld	hl,#_vbl_cnt + 0
   0003 34                  152 	inc	(hl)
                            153 ; genLabel
   0004                     154 00101$:
                            155 ; genEndFunction
                            156 	
   0004 C9                  157 	ret
   0005                     158 ___vbl_end:
                            159 ;	irq.c 14
                            160 ; genLabel
                            161 ; genFunction
                            162 ;	---------------------------------
                            163 ; Function tim
                            164 ; ---------------------------------
   0005                     165 ___tim_start:
   0005                     166 _tim:
                            167 	
                            168 ;	irq.c 17
                            169 ; genPlus
                            170 ; AOP_HL for _tim_cnt
                            171 ; genPlusIncr
   0005 21 01 00            172 	ld	hl,#_tim_cnt + 0
   0008 34                  173 	inc	(hl)
                            174 ; genLabel
   0009                     175 00101$:
                            176 ; genEndFunction
                            177 	
   0009 C9                  178 	ret
   000A                     179 ___tim_end:
                            180 ;	irq.c 20
                            181 ; genLabel
                            182 ; genFunction
                            183 ;	---------------------------------
                            184 ; Function print_counter
                            185 ; ---------------------------------
   000A                     186 ___print_counter_start:
   000A                     187 _print_counter:
   000A C5                  188 	push	bc
   000B E8 FE               189 	lda	sp,-2(sp)
                            190 ;	irq.c 25
                            191 ; genCall
   000D CD 00 00            192 	call	_disable_interrupts
                            193 ;	irq.c 26
                            194 ; genAssign
                            195 ; AOP_HL for _tim_cnt
   0010 21 01 00            196 	ld	hl,#_tim_cnt + 0
   0013 4E                  197 	ld	c,(hl)
                            198 ;	irq.c 27
                            199 ; genCall
   0014 CD 00 00            200 	call	_enable_interrupts
                            201 ;	irq.c 29
                            202 ; genCast
                            203 ; AOP_STK for _print_counter_sloc0_1_0
   0017 F8 00               204 	lda	hl,0(sp)
   0019 71                  205 	ld	(hl),c
   001A 23                  206 	inc	hl
   001B 36 00               207 	ld	(hl),#0x00
                            208 ; genIpush
                            209 ; AOP_STK for _print_counter_sloc0_1_0
   001D 2B                  210 	dec	hl
   001E 2A                  211 	ld	a,(hl+)
   001F 66                  212 	ld	h,(hl)
   0020 6F                  213 	ld	l,a
   0021 E5                  214 	push	hl
                            215 ; genIpush
   0022 21 55 00            216 	ld	hl,#__str_0 + 0
   0025 E5                  217 	push	hl
                            218 ; genCall
   0026 CD 00 00            219 	call	_printf
   0029 E8 04               220 	lda	sp,4(sp)
                            221 ;	irq.c 30
                            222 ; genCall
   002B CD 00 00            223 	call	_posy
   002E 43                  224 	ld	b,e
                            225 ; genIpush
   002F 78                  226 	ld	a,b
   0030 F5                  227 	push	af
   0031 33                  228 	inc	sp
                            229 ; genIpush
   0032 3E 09               230 	ld	a,#0x09
   0034 F5                  231 	push	af
   0035 33                  232 	inc	sp
                            233 ; genCall
   0036 CD 00 00            234 	call	_gotoxy
   0039 E8 02               235 	lda	sp,2(sp)
                            236 ;	irq.c 33
                            237 ; genCall
   003B CD 00 00            238 	call	_disable_interrupts
                            239 ;	irq.c 34
                            240 ; genAssign
                            241 ; AOP_HL for _vbl_cnt
   003E 21 00 00            242 	ld	hl,#_vbl_cnt + 0
   0041 4E                  243 	ld	c,(hl)
                            244 ;	irq.c 35
                            245 ; genCall
   0042 CD 00 00            246 	call	_enable_interrupts
                            247 ;	irq.c 37
                            248 ; genCast
                            249 ; Removed redundent load
   0045 06 00               250 	ld	b,#0x00
                            251 ; genIpush
   0047 C5                  252 	push	bc
                            253 ; genIpush
   0048 21 5D 00            254 	ld	hl,#__str_1 + 0
   004B E5                  255 	push	hl
                            256 ; genCall
   004C CD 00 00            257 	call	_printf
   004F E8 04               258 	lda	sp,4(sp)
                            259 ; genLabel
   0051                     260 00101$:
                            261 ; genEndFunction
   0051 E8 02               262 	lda	sp,2(sp)
   0053 C1                  263 	pop	bc
   0054 C9                  264 	ret
   0055                     265 ___print_counter_end:
   0055                     266 __str_0:
   0055 20 54 49 4D 20 25   267 	.ascii " TIM %u"
        75
   005C 00                  268 	.db 0x00
   005D                     269 __str_1:
   005D 2D 20 56 42 4C 20   270 	.ascii "- VBL %u"
        25 75
   0065 0A                  271 	.db 0x0A
   0066 00                  272 	.db 0x00
                            273 ;	irq.c 40
                            274 ; genLabel
                            275 ; genFunction
                            276 ;	---------------------------------
                            277 ; Function main
                            278 ; ---------------------------------
   0067                     279 ___main_start:
   0067                     280 _main:
   0067 C5                  281 	push	bc
                            282 	
                            283 ;	irq.c 43
                            284 ; genCall
   0068 CD 00 00            285 	call	_disable_interrupts
                            286 ;	irq.c 44
                            287 ; genAssign
                            288 ; AOP_HL for _tim_cnt
   006B 21 01 00            289 	ld	hl,#_tim_cnt + 0
   006E 36 00               290 	ld	(hl),#0x00
                            291 ; genAssign
                            292 ; AOP_HL for _vbl_cnt
   0070 21 00 00            293 	ld	hl,#_vbl_cnt + 0
   0073 36 00               294 	ld	(hl),#0x00
                            295 ;	irq.c 45
                            296 ; genAssign
   0075 01 00 00            297 	ld	bc,#_vbl + 0
                            298 ; genIpush
   0078 C5                  299 	push	bc
                            300 ; genCall
   0079 CD 00 00            301 	call	_add_VBL
   007C E8 02               302 	lda	sp,2(sp)
                            303 ;	irq.c 46
                            304 ; genAssign
   007E 01 05 00            305 	ld	bc,#_tim + 0
                            306 ; genIpush
   0081 C5                  307 	push	bc
                            308 ; genCall
   0082 CD 00 00            309 	call	_add_TIM
   0085 E8 02               310 	lda	sp,2(sp)
                            311 ;	irq.c 47
                            312 ; genCall
   0087 CD 00 00            313 	call	_enable_interrupts
                            314 ;	irq.c 50
                            315 ; genAssign
                            316 ; AOP_SFR for _TMA_REG
   008A 3E 00               317 	ld	a,#0x00
   008C E0 00               318 	ldh	(_TMA_REG+0),a
                            319 ;	irq.c 52
                            320 ; genAssign
                            321 ; AOP_SFR for _TAC_REG
   008E 3E 04               322 	ld	a,#0x04
   0090 E0 00               323 	ldh	(_TAC_REG+0),a
                            324 ;	irq.c 54
                            325 ; genIpush
   0092 3E 05               326 	ld	a,#0x05
   0094 F5                  327 	push	af
   0095 33                  328 	inc	sp
                            329 ; genCall
   0096 CD 00 00            330 	call	_set_interrupts
   0099 E8 01               331 	lda	sp,1(sp)
                            332 ;	irq.c 56
                            333 ; genLabel
   009B                     334 00102$:
                            335 ;	irq.c 57
                            336 ; genCall
   009B CD 0A 00            337 	call	_print_counter
                            338 ;	irq.c 58
                            339 ; genIpush
   009E 21 E8 03            340 	ld	hl,#0x03E8
   00A1 E5                  341 	push	hl
                            342 ; genCall
   00A2 CD 00 00            343 	call	_delay
   00A5 E8 02               344 	lda	sp,2(sp)
                            345 ; genGoto
   00A7 C3 9B 00            346 	jp	00102$
                            347 ; genLabel
   00AA                     348 00104$:
                            349 ; genEndFunction
                            350 	
   00AA C1                  351 	pop	bc
   00AB C9                  352 	ret
   00AC                     353 ___main_end:
                            354 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        00AC R
  0 ___main_start                      0067 R
  0 ___print_counter_end               0055 R
  0 ___print_counter_start             000A R
  0 ___tim_end                         000A R
  0 ___tim_start                       0005 R
  0 ___vbl_end                         0005 R
  0 ___vbl_start                       0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            0055 R
  0 __str_1                            005D R
    _add_TIM                           **** GX
    _add_VBL                           **** GX
    _delay                             **** GX
    _disable_interrupts                **** GX
    _enable_interrupts                 **** GX
    _gotoxy                            **** GX
  0 _main                              0067 GR
    _posy                              **** GX
  0 _print_counter                     000A GR
    _printf                            **** GX
    _set_interrupts                    **** GX
    _sys_time                          **** GX
  0 _tim                               0005 GR
  1 _tim_cnt                           0001 GR
  0 _vbl                               0000 GR
  1 _vbl_cnt                           0000 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   AC   flags 0
   1 _DATA                              size    2   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
