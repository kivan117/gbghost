                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Wed Nov 16 08:04:23 2016
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc73800
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _puts
                             13 	.globl _printf
                             14 	.globl _putchar
                             15 	.globl _waitpadup
                             16 	.globl _waitpad
                             17 	.globl _joypad
                             18 	.globl _receive_byte
                             19 	.globl _send_byte
                             20 	.globl _buffer
                             21 	.globl _str
                             22 	.globl _main
                             23 ;--------------------------------------------------------
                             24 ; Externals used
                             25 ;--------------------------------------------------------
                             26 	.globl _IE_REG
                             27 	.globl _SVBK_REG
                             28 	.globl _OCPD_REG
                             29 	.globl _OCPS_REG
                             30 	.globl _BCPD_REG
                             31 	.globl _BCPS_REG
                             32 	.globl _RP_REG
                             33 	.globl _HDMA5_REG
                             34 	.globl _HDMA4_REG
                             35 	.globl _HDMA3_REG
                             36 	.globl _HDMA2_REG
                             37 	.globl _HDMA1_REG
                             38 	.globl _VBK_REG
                             39 	.globl _KEY1_REG
                             40 	.globl _WX_REG
                             41 	.globl _WY_REG
                             42 	.globl _OBP1_REG
                             43 	.globl _OBP0_REG
                             44 	.globl _BGP_REG
                             45 	.globl _DMA_REG
                             46 	.globl _LYC_REG
                             47 	.globl _LY_REG
                             48 	.globl _SCX_REG
                             49 	.globl _SCY_REG
                             50 	.globl _STAT_REG
                             51 	.globl _LCDC_REG
                             52 	.globl _NR52_REG
                             53 	.globl _NR51_REG
                             54 	.globl _NR50_REG
                             55 	.globl _NR44_REG
                             56 	.globl _NR43_REG
                             57 	.globl _NR42_REG
                             58 	.globl _NR41_REG
                             59 	.globl _NR34_REG
                             60 	.globl _NR33_REG
                             61 	.globl _NR32_REG
                             62 	.globl _NR31_REG
                             63 	.globl _NR30_REG
                             64 	.globl _NR24_REG
                             65 	.globl _NR23_REG
                             66 	.globl _NR22_REG
                             67 	.globl _NR21_REG
                             68 	.globl _NR14_REG
                             69 	.globl _NR13_REG
                             70 	.globl _NR12_REG
                             71 	.globl _NR11_REG
                             72 	.globl _NR10_REG
                             73 	.globl _IF_REG
                             74 	.globl _TAC_REG
                             75 	.globl _TMA_REG
                             76 	.globl _TIMA_REG
                             77 	.globl _DIV_REG
                             78 	.globl _SC_REG
                             79 	.globl _SB_REG
                             80 	.globl _P1_REG
                             81 	.globl __io_out
                             82 	.globl __io_in
                             83 	.globl __io_status
                             84 	.globl _sys_time
                             85 	.globl __cpu
                             86 ;--------------------------------------------------------
                             87 ; special function registers
                             88 ;--------------------------------------------------------
                             89 ;--------------------------------------------------------
                             90 ; special function bits 
                             91 ;--------------------------------------------------------
                             92 ;--------------------------------------------------------
                             93 ; internal ram data
                             94 ;--------------------------------------------------------
                             95 	.area _DATA
   0000                      96 _str::
   0000                      97 	.ds 2
   0002                      98 _buffer::
   0002                      99 	.ds 32
                            100 ;--------------------------------------------------------
                            101 ; overlayable items in internal ram 
                            102 ;--------------------------------------------------------
                            103 	.area _OVERLAY
                            104 ;--------------------------------------------------------
                            105 ; indirectly addressable internal ram data
                            106 ;--------------------------------------------------------
                            107 	.area _ISEG
                            108 ;--------------------------------------------------------
                            109 ; bit data
                            110 ;--------------------------------------------------------
                            111 	.area _BSEG
                            112 ;--------------------------------------------------------
                            113 ; external ram data
                            114 ;--------------------------------------------------------
                            115 	.area _XSEG
                            116 ;--------------------------------------------------------
                            117 ; global & static initialisations
                            118 ;--------------------------------------------------------
                            119 	.area _GSINIT
                            120 	.area _GSFINAL
                            121 	.area _GSINIT
                            122 ;	comm.c 94
                            123 ; genAddrOf
                            124 ; AOP_HL for _str
   0000 11 5E 03            125 	ld	de,#__str_18
   0003 21 00 00            126 	ld	hl,#_str + 0
   0006 73                  127 	ld	(hl),e
   0007 23                  128 	inc	hl
   0008 72                  129 	ld	(hl),d
                            130 ;--------------------------------------------------------
                            131 ; Home
                            132 ;--------------------------------------------------------
                            133 	.area _HOME
                            134 	.area _CODE
                            135 ;--------------------------------------------------------
                            136 ; code
                            137 ;--------------------------------------------------------
                            138 	.area _CODE
                            139 ;	comm.c 7
                            140 ; genLabel
                            141 ; genFunction
                            142 ;	---------------------------------
                            143 ; Function main
                            144 ; ---------------------------------
   0000                     145 ___main_start:
   0000                     146 _main:
   0000 C5                  147 	push	bc
   0001 E8 F9               148 	lda	sp,-7(sp)
                            149 ;	comm.c 9
                            150 ; genAssign
                            151 ; AOP_STK for _main_n_1_1
   0003 F8 05               152 	lda	hl,5(sp)
   0005 36 00               153 	ld	(hl),#0x00
                            154 ;	comm.c 12
                            155 ; genIpush
   0007 21 A6 02            156 	ld	hl,#__str_0 + 0
   000A E5                  157 	push	hl
                            158 ; genCall
   000B CD 00 00            159 	call	_puts
   000E E8 02               160 	lda	sp,2(sp)
                            161 ;	comm.c 13
                            162 ; genIpush
   0010 21 AB 02            163 	ld	hl,#__str_1 + 0
   0013 E5                  164 	push	hl
                            165 ; genCall
   0014 CD 00 00            166 	call	_puts
   0017 E8 02               167 	lda	sp,2(sp)
                            168 ;	comm.c 14
                            169 ; genIpush
   0019 21 BB 02            170 	ld	hl,#__str_2 + 0
   001C E5                  171 	push	hl
                            172 ; genCall
   001D CD 00 00            173 	call	_puts
   0020 E8 02               174 	lda	sp,2(sp)
                            175 ;	comm.c 15
                            176 ; genIpush
   0022 21 CE 02            177 	ld	hl,#__str_3 + 0
   0025 E5                  178 	push	hl
                            179 ; genCall
   0026 CD 00 00            180 	call	_puts
   0029 E8 02               181 	lda	sp,2(sp)
                            182 ;	comm.c 16
                            183 ; genIpush
   002B 21 D5 02            184 	ld	hl,#__str_4 + 0
   002E E5                  185 	push	hl
                            186 ; genCall
   002F CD 00 00            187 	call	_puts
   0032 E8 02               188 	lda	sp,2(sp)
                            189 ;	comm.c 17
                            190 ; genIpush
   0034 21 E5 02            191 	ld	hl,#__str_5 + 0
   0037 E5                  192 	push	hl
                            193 ; genCall
   0038 CD 00 00            194 	call	_puts
   003B E8 02               195 	lda	sp,2(sp)
                            196 ;	comm.c 19
                            197 ; genLabel
   003D                     198 00157$:
                            199 ;	comm.c 20
                            200 ; genIpush
   003D 3E F0               201 	ld	a,#0xF0
   003F F5                  202 	push	af
   0040 33                  203 	inc	sp
                            204 ; genCall
   0041 CD 00 00            205 	call	_waitpad
                            206 ; AOP_STK for _main_i_1_1
   0044 F8 07               207 	lda	hl,7(sp)
   0046 73                  208 	ld	(hl),e
   0047 E8 01               209 	lda	sp,1(sp)
                            210 ;	comm.c 21
                            211 ; genCall
   0049 CD 00 00            212 	call	_waitpadup
                            213 ;	comm.c 23
                            214 ; genCmpEq
                            215 ; AOP_STK for _main_i_1_1
   004C F8 06               216 	lda	hl,6(sp)
   004E 7E                  217 	ld	a,(hl) ; 2
   004F FE 10               218 	cp	a,#0x10
   0051 C2 56 00            219 	jp	nz,00186$
   0054 18 03               220 	jr	00187$
   0056                     221 00186$:
   0056 C3 B7 00            222 	jp	00154$
   0059                     223 00187$:
                            224 ;	comm.c 25
                            225 ; genIpush
   0059 21 F8 02            226 	ld	hl,#__str_6 + 0
   005C E5                  227 	push	hl
                            228 ; genCall
   005D CD 00 00            229 	call	_printf
   0060 E8 02               230 	lda	sp,2(sp)
                            231 ;	comm.c 26
                            232 ; genAssign
                            233 ; AOP_STK for _main_n_1_1
                            234 ; AOP_HL for __io_out
   0062 F8 05               235 	lda	hl,5(sp)
   0064 7E                  236 	ld	a,(hl)
   0065 21 00 00            237 	ld	hl,#__io_out + 0
   0068 77                  238 	ld	(hl),a
                            239 ; genPlus
                            240 ; AOP_STK for _main_n_1_1
                            241 ; genPlusIncr
   0069 F8 05               242 	lda	hl,5(sp)
   006B 34                  243 	inc	(hl)
                            244 ;	comm.c 27
                            245 ; genCall
   006C CD 00 00            246 	call	_send_byte
                            247 ;	comm.c 29
                            248 ; genLabel
   006F                     249 00102$:
                            250 ; genCmpEq
                            251 ; AOP_HL for __io_status
   006F 21 00 00            252 	ld	hl,#__io_status + 0
   0072 7E                  253 	ld	a,(hl) ; 2
   0073 FE 01               254 	cp	a,#0x01
   0075 C2 7C 00            255 	jp	nz,00188$
   0078 3E 01               256 	ld	a,#0x01
   007A 18 01               257 	jr	00189$
   007C                     258 00188$:
   007C AF                  259 	xor	a,a
   007D                     260 00189$:
   007D 4F                  261 	ld	c,a
                            262 ; genIfx
                            263 ; Removed redundent or a,a
   007E AF                  264 	xor	a,a
   007F B1                  265 	or	a,c
   0080 CA 8C 00            266 	jp	z,00104$
                            267 ; genCall
   0083 CD 00 00            268 	call	_joypad
   0086 43                  269 	ld	b,e
                            270 ; genCmpEq
   0087 78                  271 	ld	a,b
   0088 B7                  272 	or	a,a
                            273 ; Rule 5
   0089 CA 6F 00            274 	jp	z,00102$
   008C                     275 00190$:
                            276 ; genLabel
   008C                     277 00104$:
                            278 ;	comm.c 31
                            279 ; genCmpEq
                            280 ; AOP_HL for __io_status
   008C 21 00 00            281 	ld	hl,#__io_status + 0
   008F 7E                  282 	ld	a,(hl)
   0090 B7                  283 	or	a,a
   0091 C2 96 00            284 	jp	nz,00191$
   0094 18 03               285 	jr	00192$
   0096                     286 00191$:
   0096 C3 A5 00            287 	jp	00106$
   0099                     288 00192$:
                            289 ;	comm.c 32
                            290 ; genIpush
   0099 21 06 03            291 	ld	hl,#__str_7 + 0
   009C E5                  292 	push	hl
                            293 ; genCall
   009D CD 00 00            294 	call	_printf
   00A0 E8 02               295 	lda	sp,2(sp)
                            296 ; genGoto
   00A2 C3 9C 02            297 	jp	00155$
                            298 ; genLabel
   00A5                     299 00106$:
                            300 ;	comm.c 34
                            301 ; genIpush
                            302 ; AOP_HL for __io_status
   00A5 21 00 00            303 	ld	hl,#__io_status + 0
   00A8 7E                  304 	ld	a,(hl)
   00A9 F5                  305 	push	af
   00AA 33                  306 	inc	sp
                            307 ; genIpush
   00AB 21 0A 03            308 	ld	hl,#__str_8 + 0
   00AE E5                  309 	push	hl
                            310 ; genCall
   00AF CD 00 00            311 	call	_printf
   00B2 E8 03               312 	lda	sp,3(sp)
                            313 ; genGoto
   00B4 C3 9C 02            314 	jp	00155$
                            315 ; genLabel
   00B7                     316 00154$:
                            317 ;	comm.c 35
                            318 ; genCmpEq
                            319 ; AOP_STK for _main_i_1_1
   00B7 F8 06               320 	lda	hl,6(sp)
   00B9 7E                  321 	ld	a,(hl) ; 2
   00BA FE 20               322 	cp	a,#0x20
   00BC C2 C1 00            323 	jp	nz,00193$
   00BF 18 03               324 	jr	00194$
   00C1                     325 00193$:
   00C1 C3 1E 01            326 	jp	00151$
   00C4                     327 00194$:
                            328 ;	comm.c 37
                            329 ; genIpush
   00C4 21 0F 03            330 	ld	hl,#__str_9 + 0
   00C7 E5                  331 	push	hl
                            332 ; genCall
   00C8 CD 00 00            333 	call	_printf
   00CB E8 02               334 	lda	sp,2(sp)
                            335 ;	comm.c 38
                            336 ; genCall
   00CD CD 00 00            337 	call	_receive_byte
                            338 ;	comm.c 40
                            339 ; genLabel
   00D0                     340 00109$:
                            341 ; genCmpEq
                            342 ; AOP_HL for __io_status
   00D0 21 00 00            343 	ld	hl,#__io_status + 0
   00D3 7E                  344 	ld	a,(hl) ; 2
   00D4 FE 02               345 	cp	a,#0x02
   00D6 C2 DD 00            346 	jp	nz,00195$
   00D9 3E 01               347 	ld	a,#0x01
   00DB 18 01               348 	jr	00196$
   00DD                     349 00195$:
   00DD AF                  350 	xor	a,a
   00DE                     351 00196$:
   00DE 4F                  352 	ld	c,a
                            353 ; genIfx
                            354 ; Removed redundent or a,a
   00DF AF                  355 	xor	a,a
   00E0 B1                  356 	or	a,c
   00E1 CA ED 00            357 	jp	z,00111$
                            358 ; genCall
   00E4 CD 00 00            359 	call	_joypad
   00E7 43                  360 	ld	b,e
                            361 ; genCmpEq
   00E8 78                  362 	ld	a,b
   00E9 B7                  363 	or	a,a
                            364 ; Rule 5
   00EA CA D0 00            365 	jp	z,00109$
   00ED                     366 00197$:
                            367 ; genLabel
   00ED                     368 00111$:
                            369 ;	comm.c 42
                            370 ; genCmpEq
                            371 ; AOP_HL for __io_status
   00ED 21 00 00            372 	ld	hl,#__io_status + 0
   00F0 7E                  373 	ld	a,(hl)
   00F1 B7                  374 	or	a,a
   00F2 C2 F7 00            375 	jp	nz,00198$
   00F5 18 03               376 	jr	00199$
   00F7                     377 00198$:
   00F7 C3 0C 01            378 	jp	00113$
   00FA                     379 00199$:
                            380 ;	comm.c 43
                            381 ; genIpush
                            382 ; AOP_HL for __io_in
   00FA 21 00 00            383 	ld	hl,#__io_in + 0
   00FD 7E                  384 	ld	a,(hl)
   00FE F5                  385 	push	af
   00FF 33                  386 	inc	sp
                            387 ; genIpush
   0100 21 1F 03            388 	ld	hl,#__str_10 + 0
   0103 E5                  389 	push	hl
                            390 ; genCall
   0104 CD 00 00            391 	call	_printf
   0107 E8 03               392 	lda	sp,3(sp)
                            393 ; genGoto
   0109 C3 9C 02            394 	jp	00155$
                            395 ; genLabel
   010C                     396 00113$:
                            397 ;	comm.c 45
                            398 ; genIpush
                            399 ; AOP_HL for __io_status
   010C 21 00 00            400 	ld	hl,#__io_status + 0
   010F 7E                  401 	ld	a,(hl)
   0110 F5                  402 	push	af
   0111 33                  403 	inc	sp
                            404 ; genIpush
   0112 21 26 03            405 	ld	hl,#__str_11 + 0
   0115 E5                  406 	push	hl
                            407 ; genCall
   0116 CD 00 00            408 	call	_printf
   0119 E8 03               409 	lda	sp,3(sp)
                            410 ; genGoto
   011B C3 9C 02            411 	jp	00155$
                            412 ; genLabel
   011E                     413 00151$:
                            414 ;	comm.c 46
                            415 ; genCmpEq
                            416 ; AOP_STK for _main_i_1_1
   011E F8 06               417 	lda	hl,6(sp)
   0120 7E                  418 	ld	a,(hl) ; 2
   0121 FE 80               419 	cp	a,#0x80
   0123 C2 28 01            420 	jp	nz,00200$
   0126 18 03               421 	jr	00201$
   0128                     422 00200$:
   0128 C3 E3 01            423 	jp	00148$
   012B                     424 00201$:
                            425 ;	comm.c 48
                            426 ; genIpush
   012B 21 2B 03            427 	ld	hl,#__str_12 + 0
   012E E5                  428 	push	hl
                            429 ; genCall
   012F CD 00 00            430 	call	_printf
   0132 E8 02               431 	lda	sp,2(sp)
                            432 ;	comm.c 49
                            433 ; genAssign
                            434 ; AOP_HL for _str
                            435 ; AOP_STK for _main_s_1_1
   0134 21 00 00            436 	ld	hl,#_str + 0
   0137 2A                  437 	ld	a,(hl+)
   0138 5E                  438 	ld	e,(hl)
   0139 F8 03               439 	lda	hl,3(sp)
   013B 22                  440 	ld	(hl+),a
   013C 73                  441 	ld	(hl),e
                            442 ;	comm.c 50
                            443 ; genLabel
   013D                     444 00128$:
                            445 ;	comm.c 51
                            446 ; genPointerGet
                            447 ; AOP_STK for _main_s_1_1
                            448 ; AOP_STK for _main_sloc0_1_0
   013D F8 03               449 	lda	hl,3(sp)
   013F 5E                  450 	ld	e,(hl)
   0140 23                  451 	inc	hl
   0141 56                  452 	ld	d,(hl)
   0142 1A                  453 	ld	a,(de)
   0143 2B                  454 	dec	hl
   0144 2B                  455 	dec	hl
   0145 77                  456 	ld	(hl),a
                            457 ; genAssign
                            458 ; AOP_STK for _main_sloc0_1_0
                            459 ; AOP_HL for __io_out
   0146 7E                  460 	ld	a,(hl)
   0147 21 00 00            461 	ld	hl,#__io_out + 0
   014A 77                  462 	ld	(hl),a
                            463 ; genAssign
                            464 ; AOP_HL for __io_out
                            465 ; (registers are the same)
                            466 ;	comm.c 52
                            467 ; genLabel
   014B                     468 00120$:
                            469 ;	comm.c 53
                            470 ; genCall
   014B CD 00 00            471 	call	_send_byte
                            472 ;	comm.c 55
                            473 ; genLabel
   014E                     474 00116$:
                            475 ; genCmpEq
                            476 ; AOP_HL for __io_status
   014E 21 00 00            477 	ld	hl,#__io_status + 0
   0151 7E                  478 	ld	a,(hl) ; 2
   0152 FE 01               479 	cp	a,#0x01
   0154 C2 5B 01            480 	jp	nz,00202$
   0157 3E 01               481 	ld	a,#0x01
   0159 18 01               482 	jr	00203$
   015B                     483 00202$:
   015B AF                  484 	xor	a,a
   015C                     485 00203$:
   015C 4F                  486 	ld	c,a
                            487 ; genIfx
                            488 ; Removed redundent or a,a
   015D AF                  489 	xor	a,a
   015E B1                  490 	or	a,c
   015F CA 6B 01            491 	jp	z,00121$
                            492 ; genCall
   0162 CD 00 00            493 	call	_joypad
   0165 43                  494 	ld	b,e
                            495 ; genCmpEq
   0166 78                  496 	ld	a,b
   0167 B7                  497 	or	a,a
                            498 ; Rule 5
   0168 CA 4E 01            499 	jp	z,00116$
   016B                     500 00204$:
                            501 ; genLabel
   016B                     502 00121$:
                            503 ;	comm.c 57
                            504 ; genCmpEq
                            505 ; AOP_HL for __io_status
                            506 ; AOP_STK for _main_sloc2_1_0
   016B 21 00 00            507 	ld	hl,#__io_status + 0
   016E 7E                  508 	ld	a,(hl)
   016F B7                  509 	or	a,a
   0170 C2 77 01            510 	jp	nz,00205$
   0173 3E 01               511 	ld	a,#0x01
   0175 18 01               512 	jr	00206$
   0177                     513 00205$:
   0177 AF                  514 	xor	a,a
   0178                     515 00206$:
   0178 F8 00               516 	lda	hl,0(sp)
   017A 77                  517 	ld	(hl),a
                            518 ; genIfx
                            519 ; AOP_STK for _main_sloc2_1_0
                            520 ; Removed redundent or a,a
   017B AF                  521 	xor	a,a
   017C B6                  522 	or	a,(hl)
   017D C2 89 01            523 	jp	nz,00122$
                            524 ; genCall
   0180 CD 00 00            525 	call	_joypad
   0183 43                  526 	ld	b,e
                            527 ; genCmpEq
   0184 78                  528 	ld	a,b
   0185 B7                  529 	or	a,a
                            530 ; Rule 5
   0186 CA 4B 01            531 	jp	z,00120$
   0189                     532 00207$:
                            533 ; genLabel
   0189                     534 00122$:
                            535 ;	comm.c 58
                            536 ; genIfx
                            537 ; AOP_STK for _main_sloc2_1_0
   0189 AF                  538 	xor	a,a
   018A F8 00               539 	lda	hl,0(sp)
   018C B6                  540 	or	a,(hl)
   018D B7                  541 	or	a,a
   018E C2 A3 01            542 	jp	nz,00124$
                            543 ;	comm.c 59
                            544 ; genIpush
                            545 ; AOP_HL for __io_status
   0191 21 00 00            546 	ld	hl,#__io_status + 0
   0194 7E                  547 	ld	a,(hl)
   0195 F5                  548 	push	af
   0196 33                  549 	inc	sp
                            550 ; genIpush
   0197 21 39 03            551 	ld	hl,#__str_13 + 0
   019A E5                  552 	push	hl
                            553 ; genCall
   019B CD 00 00            554 	call	_printf
   019E E8 03               555 	lda	sp,3(sp)
                            556 ;	comm.c 60
                            557 ; genGoto
   01A0 C3 CA 01            558 	jp	00129$
                            559 ; genLabel
   01A3                     560 00124$:
                            561 ;	comm.c 62
                            562 ; genCmpEq
                            563 ; AOP_STK for _main_sloc0_1_0
                            564 ; AOP_STK for _main_sloc1_1_0
   01A3 F8 02               565 	lda	hl,2(sp)
   01A5 7E                  566 	ld	a,(hl)
   01A6 B7                  567 	or	a,a
   01A7 C2 AE 01            568 	jp	nz,00208$
   01AA 3E 01               569 	ld	a,#0x01
   01AC 18 01               570 	jr	00209$
   01AE                     571 00208$:
   01AE AF                  572 	xor	a,a
   01AF                     573 00209$:
   01AF F8 01               574 	lda	hl,1(sp)
   01B1 77                  575 	ld	(hl),a
                            576 ; genIfx
                            577 ; AOP_STK for _main_sloc1_1_0
                            578 ; Removed redundent or a,a
   01B2 AF                  579 	xor	a,a
   01B3 B6                  580 	or	a,(hl)
   01B4 C2 CA 01            581 	jp	nz,00129$
                            582 ;	comm.c 64
                            583 ; genPlus
                            584 ; AOP_STK for _main_s_1_1
                            585 ; genPlusIncr
                            586 ;	genPlusIncr failed
   01B7 23                  587 	inc	hl
   01B8 23                  588 	inc	hl
   01B9 5E                  589 	ld	e,(hl)
   01BA 23                  590 	inc	hl
   01BB 56                  591 	ld	d,(hl)
   01BC 21 01 00            592 	ld	hl,#0x0001
   01BF 19                  593 	add	hl,de
   01C0 45                  594 	ld	b,l
   01C1 4C                  595 	ld	c,h
                            596 ; genAssign
                            597 ; AOP_STK for _main_s_1_1
   01C2 F8 03               598 	lda	hl,3(sp)
   01C4 70                  599 	ld	(hl),b
   01C5 23                  600 	inc	hl
   01C6 71                  601 	ld	(hl),c
                            602 ; genGoto
   01C7 C3 3D 01            603 	jp	00128$
                            604 ; genLabel
   01CA                     605 00129$:
                            606 ;	comm.c 66
                            607 ; genCmpEq
                            608 ; AOP_HL for __io_status
   01CA 21 00 00            609 	ld	hl,#__io_status + 0
   01CD 7E                  610 	ld	a,(hl)
   01CE B7                  611 	or	a,a
   01CF C2 D4 01            612 	jp	nz,00210$
   01D2 18 03               613 	jr	00211$
   01D4                     614 00210$:
   01D4 C3 9C 02            615 	jp	00155$
   01D7                     616 00211$:
                            617 ;	comm.c 67
                            618 ; genIpush
   01D7 21 3E 03            619 	ld	hl,#__str_14 + 0
   01DA E5                  620 	push	hl
                            621 ; genCall
   01DB CD 00 00            622 	call	_printf
   01DE E8 02               623 	lda	sp,2(sp)
                            624 ; genGoto
   01E0 C3 9C 02            625 	jp	00155$
                            626 ; genLabel
   01E3                     627 00148$:
                            628 ;	comm.c 68
                            629 ; genCmpEq
                            630 ; AOP_STK for _main_i_1_1
   01E3 F8 06               631 	lda	hl,6(sp)
   01E5 7E                  632 	ld	a,(hl) ; 2
   01E6 FE 40               633 	cp	a,#0x40
   01E8 C2 ED 01            634 	jp	nz,00212$
   01EB 18 03               635 	jr	00213$
   01ED                     636 00212$:
   01ED C3 9C 02            637 	jp	00155$
   01F0                     638 00213$:
                            639 ;	comm.c 70
                            640 ; genIpush
   01F0 21 42 03            641 	ld	hl,#__str_15 + 0
   01F3 E5                  642 	push	hl
                            643 ; genCall
   01F4 CD 00 00            644 	call	_printf
   01F7 E8 02               645 	lda	sp,2(sp)
                            646 ;	comm.c 71
                            647 ; genAddrOf
                            648 ; AOP_STK for _main_s_1_1
   01F9 11 02 00            649 	ld	de,#_buffer
   01FC F8 03               650 	lda	hl,3(sp)
   01FE 73                  651 	ld	(hl),e
   01FF 23                  652 	inc	hl
   0200 72                  653 	ld	(hl),d
                            654 ;	comm.c 72
                            655 ; genLabel
   0201                     656 00141$:
                            657 ;	comm.c 73
                            658 ; genCall
   0201 CD 00 00            659 	call	_receive_byte
                            660 ;	comm.c 75
                            661 ; genLabel
   0204                     662 00133$:
                            663 ; genCmpEq
                            664 ; AOP_HL for __io_status
   0204 21 00 00            665 	ld	hl,#__io_status + 0
   0207 7E                  666 	ld	a,(hl) ; 2
   0208 FE 02               667 	cp	a,#0x02
   020A C2 11 02            668 	jp	nz,00214$
   020D 3E 01               669 	ld	a,#0x01
   020F 18 01               670 	jr	00215$
   0211                     671 00214$:
   0211 AF                  672 	xor	a,a
   0212                     673 00215$:
   0212 4F                  674 	ld	c,a
                            675 ; genIfx
                            676 ; Removed redundent or a,a
   0213 AF                  677 	xor	a,a
   0214 B1                  678 	or	a,c
   0215 CA 21 02            679 	jp	z,00135$
                            680 ; genCall
   0218 CD 00 00            681 	call	_joypad
   021B 43                  682 	ld	b,e
                            683 ; genCmpEq
   021C 78                  684 	ld	a,b
   021D B7                  685 	or	a,a
                            686 ; Rule 5
   021E CA 04 02            687 	jp	z,00133$
   0221                     688 00216$:
                            689 ; genLabel
   0221                     690 00135$:
                            691 ;	comm.c 77
                            692 ; genCmpEq
                            693 ; AOP_HL for __io_status
                            694 ; AOP_STK for _main_sloc2_1_0
   0221 21 00 00            695 	ld	hl,#__io_status + 0
   0224 7E                  696 	ld	a,(hl)
   0225 B7                  697 	or	a,a
   0226 C2 2D 02            698 	jp	nz,00217$
   0229 3E 01               699 	ld	a,#0x01
   022B 18 01               700 	jr	00218$
   022D                     701 00217$:
   022D AF                  702 	xor	a,a
   022E                     703 00218$:
   022E F8 00               704 	lda	hl,0(sp)
   0230 77                  705 	ld	(hl),a
                            706 ; genIfx
                            707 ; AOP_STK for _main_sloc2_1_0
                            708 ; Removed redundent or a,a
   0231 AF                  709 	xor	a,a
   0232 B6                  710 	or	a,(hl)
   0233 C2 48 02            711 	jp	nz,00137$
                            712 ;	comm.c 78
                            713 ; genIpush
                            714 ; AOP_HL for __io_status
   0236 21 00 00            715 	ld	hl,#__io_status + 0
   0239 7E                  716 	ld	a,(hl)
   023A F5                  717 	push	af
   023B 33                  718 	inc	sp
                            719 ; genIpush
   023C 21 52 03            720 	ld	hl,#__str_16 + 0
   023F E5                  721 	push	hl
                            722 ; genCall
   0240 CD 00 00            723 	call	_printf
   0243 E8 03               724 	lda	sp,3(sp)
                            725 ;	comm.c 79
                            726 ; genGoto
   0245 C3 82 02            727 	jp	00142$
                            728 ; genLabel
   0248                     729 00137$:
                            730 ;	comm.c 81
                            731 ; genAssign
                            732 ; (operands are equal 3)
                            733 ; genIpush
                            734 ; AOP_HL for __io_in
   0248 21 00 00            735 	ld	hl,#__io_in + 0
   024B 7E                  736 	ld	a,(hl)
   024C F5                  737 	push	af
   024D 33                  738 	inc	sp
                            739 ; genCall
   024E CD 00 00            740 	call	_putchar
   0251 E8 01               741 	lda	sp,1(sp)
                            742 ;	comm.c 82
                            743 ; genAssign
                            744 ; (operands are equal 3)
                            745 ; genAssign (pointer)
                            746 ; AOP_STK for _main_s_1_1
                            747 ; AOP_HL for __io_in
   0253 F8 03               748 	lda	hl,3(sp)
   0255 5E                  749 	ld	e,(hl)
   0256 23                  750 	inc	hl
   0257 56                  751 	ld	d,(hl)
   0258 21 00 00            752 	ld	hl,#__io_in + 0
   025B 7E                  753 	ld	a,(hl)
   025C 12                  754 	ld	(de),a
                            755 ;	comm.c 83
                            756 ; genCmpEq
                            757 ; AOP_HL for __io_in
                            758 ; AOP_STK for _main_sloc1_1_0
   025D 7E                  759 	ld	a,(hl)
   025E B7                  760 	or	a,a
   025F C2 66 02            761 	jp	nz,00219$
   0262 3E 01               762 	ld	a,#0x01
   0264 18 01               763 	jr	00220$
   0266                     764 00219$:
   0266 AF                  765 	xor	a,a
   0267                     766 00220$:
   0267 F8 01               767 	lda	hl,1(sp)
   0269 77                  768 	ld	(hl),a
                            769 ; genIfx
                            770 ; AOP_STK for _main_sloc1_1_0
                            771 ; Removed redundent or a,a
   026A AF                  772 	xor	a,a
   026B B6                  773 	or	a,(hl)
   026C C2 82 02            774 	jp	nz,00142$
                            775 ;	comm.c 85
                            776 ; genPlus
                            777 ; AOP_STK for _main_s_1_1
                            778 ; genPlusIncr
                            779 ;	genPlusIncr failed
   026F 23                  780 	inc	hl
   0270 23                  781 	inc	hl
   0271 5E                  782 	ld	e,(hl)
   0272 23                  783 	inc	hl
   0273 56                  784 	ld	d,(hl)
   0274 21 01 00            785 	ld	hl,#0x0001
   0277 19                  786 	add	hl,de
   0278 45                  787 	ld	b,l
   0279 4C                  788 	ld	c,h
                            789 ; genAssign
                            790 ; AOP_STK for _main_s_1_1
   027A F8 03               791 	lda	hl,3(sp)
   027C 70                  792 	ld	(hl),b
   027D 23                  793 	inc	hl
   027E 71                  794 	ld	(hl),c
                            795 ; genGoto
   027F C3 01 02            796 	jp	00141$
                            797 ; genLabel
   0282                     798 00142$:
                            799 ;	comm.c 87
                            800 ; genCmpEq
                            801 ; AOP_HL for __io_status
   0282 21 00 00            802 	ld	hl,#__io_status + 0
   0285 7E                  803 	ld	a,(hl)
   0286 B7                  804 	or	a,a
   0287 C2 8C 02            805 	jp	nz,00221$
   028A 18 03               806 	jr	00222$
   028C                     807 00221$:
   028C C3 9C 02            808 	jp	00155$
   028F                     809 00222$:
                            810 ;	comm.c 88
                            811 ; genIpush
   028F 21 02 00            812 	ld	hl,#_buffer + 0
   0292 E5                  813 	push	hl
                            814 ; genIpush
   0293 21 57 03            815 	ld	hl,#__str_17 + 0
   0296 E5                  816 	push	hl
                            817 ; genCall
   0297 CD 00 00            818 	call	_printf
   029A E8 04               819 	lda	sp,4(sp)
                            820 ; genLabel
   029C                     821 00155$:
                            822 ;	comm.c 91
                            823 ; genCall
   029C CD 00 00            824 	call	_waitpadup
                            825 ; genGoto
   029F C3 3D 00            826 	jp	00157$
                            827 ; genLabel
   02A2                     828 00159$:
                            829 ; genEndFunction
   02A2 E8 07               830 	lda	sp,7(sp)
   02A4 C1                  831 	pop	bc
   02A5 C9                  832 	ret
   02A6                     833 ___main_end:
   02A6                     834 __str_0:
   02A6 42 79 74 65         835 	.ascii "Byte"
   02AA 00                  836 	.db 0x00
   02AB                     837 __str_1:
   02AB 20 20 41 20 20 20   838 	.ascii "  A      : Send"
        20 20 20 3A 20 53
        65 6E 64
   02BA 00                  839 	.db 0x00
   02BB                     840 __str_2:
   02BB 20 20 42 20 20 20   841 	.ascii "  B      : Receive"
        20 20 20 3A 20 52
        65 63 65 69 76 65
   02CD 00                  842 	.db 0x00
   02CE                     843 __str_3:
   02CE 53 74 72 69 6E 67   844 	.ascii "String"
   02D4 00                  845 	.db 0x00
   02D5                     846 __str_4:
   02D5 20 20 53 54 41 52   847 	.ascii "  START  : Send"
        54 20 20 3A 20 53
        65 6E 64
   02E4 00                  848 	.db 0x00
   02E5                     849 __str_5:
   02E5 20 20 53 45 4C 45   850 	.ascii "  SELECT : Receive"
        43 54 20 3A 20 52
        65 63 65 69 76 65
   02F7 00                  851 	.db 0x00
   02F8                     852 __str_6:
   02F8 53 65 6E 64 69 6E   853 	.ascii "Sending b... "
        67 20 62 2E 2E 2E
        20
   0305 00                  854 	.db 0x00
   0306                     855 __str_7:
   0306 4F 4B               856 	.ascii "OK"
   0308 0A                  857 	.db 0x0A
   0309 00                  858 	.db 0x00
   030A                     859 __str_8:
   030A 23 25 64            860 	.ascii "#%d"
   030D 0A                  861 	.db 0x0A
   030E 00                  862 	.db 0x00
   030F                     863 __str_9:
   030F 52 65 63 65 69 76   864 	.ascii "Receiving b... "
        69 6E 67 20 62 2E
        2E 2E 20
   031E 00                  865 	.db 0x00
   031F                     866 __str_10:
   031F 4F 4B               867 	.ascii "OK"
   0321 0A                  868 	.db 0x0A
   0322 25 64               869 	.ascii "%d"
   0324 0A                  870 	.db 0x0A
   0325 00                  871 	.db 0x00
   0326                     872 __str_11:
   0326 23 25 64            873 	.ascii "#%d"
   0329 0A                  874 	.db 0x0A
   032A 00                  875 	.db 0x00
   032B                     876 __str_12:
   032B 53 65 6E 64 69 6E   877 	.ascii "Sending s... "
        67 20 73 2E 2E 2E
        20
   0338 00                  878 	.db 0x00
   0339                     879 __str_13:
   0339 23 25 64            880 	.ascii "#%d"
   033C 0A                  881 	.db 0x0A
   033D 00                  882 	.db 0x00
   033E                     883 __str_14:
   033E 4F 4B               884 	.ascii "OK"
   0340 0A                  885 	.db 0x0A
   0341 00                  886 	.db 0x00
   0342                     887 __str_15:
   0342 52 65 63 65 69 76   888 	.ascii "Receiving s... "
        69 6E 67 20 73 2E
        2E 2E 20
   0351 00                  889 	.db 0x00
   0352                     890 __str_16:
   0352 23 25 64            891 	.ascii "#%d"
   0355 0A                  892 	.db 0x0A
   0356 00                  893 	.db 0x00
   0357                     894 __str_17:
   0357 4F 4B               895 	.ascii "OK"
   0359 0A                  896 	.db 0x0A
   035A 25 73               897 	.ascii "%s"
   035C 0A                  898 	.db 0x0A
   035D 00                  899 	.db 0x00
                            900 	.area _CODE
   035E                     901 __str_18:
   035E 48 65 6C 6C 6F 20   902 	.ascii "Hello World!"
        57 6F 72 6C 64 21
   036A 00                  903 	.db 0x00
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        02A6 R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            02A6 R
  0 __str_1                            02AB R
  0 __str_10                           031F R
  0 __str_11                           0326 R
  0 __str_12                           032B R
  0 __str_13                           0339 R
  0 __str_14                           033E R
  0 __str_15                           0342 R
  0 __str_16                           0352 R
  0 __str_17                           0357 R
  0 __str_18                           035E R
  0 __str_2                            02BB R
  0 __str_3                            02CE R
  0 __str_4                            02D5 R
  0 __str_5                            02E5 R
  0 __str_6                            02F8 R
  0 __str_7                            0306 R
  0 __str_8                            030A R
  0 __str_9                            030F R
  1 _buffer                            0002 GR
    _joypad                            **** GX
  0 _main                              0000 GR
    _printf                            **** GX
    _putchar                           **** GX
    _puts                              **** GX
    _receive_byte                      **** GX
    _send_byte                         **** GX
  1 _str                               0000 GR
    _sys_time                          **** GX
    _waitpad                           **** GX
    _waitpadup                         **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  36B   flags 0
   1 _DATA                              size   22   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    9   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
