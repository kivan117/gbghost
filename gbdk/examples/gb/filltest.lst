                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Wed Nov 16 08:04:25 2016
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc57920
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _color
                             13 	.globl _gotogxy
                             14 	.globl _getpix
                             15 	.globl _circle
                             16 	.globl _box
                             17 	.globl _line
                             18 	.globl _plot_point
                             19 	.globl _gprintf
                             20 	.globl _main
                             21 ;--------------------------------------------------------
                             22 ; Externals used
                             23 ;--------------------------------------------------------
                             24 	.globl _IE_REG
                             25 	.globl _SVBK_REG
                             26 	.globl _OCPD_REG
                             27 	.globl _OCPS_REG
                             28 	.globl _BCPD_REG
                             29 	.globl _BCPS_REG
                             30 	.globl _RP_REG
                             31 	.globl _HDMA5_REG
                             32 	.globl _HDMA4_REG
                             33 	.globl _HDMA3_REG
                             34 	.globl _HDMA2_REG
                             35 	.globl _HDMA1_REG
                             36 	.globl _VBK_REG
                             37 	.globl _KEY1_REG
                             38 	.globl _WX_REG
                             39 	.globl _WY_REG
                             40 	.globl _OBP1_REG
                             41 	.globl _OBP0_REG
                             42 	.globl _BGP_REG
                             43 	.globl _DMA_REG
                             44 	.globl _LYC_REG
                             45 	.globl _LY_REG
                             46 	.globl _SCX_REG
                             47 	.globl _SCY_REG
                             48 	.globl _STAT_REG
                             49 	.globl _LCDC_REG
                             50 	.globl _NR52_REG
                             51 	.globl _NR51_REG
                             52 	.globl _NR50_REG
                             53 	.globl _NR44_REG
                             54 	.globl _NR43_REG
                             55 	.globl _NR42_REG
                             56 	.globl _NR41_REG
                             57 	.globl _NR34_REG
                             58 	.globl _NR33_REG
                             59 	.globl _NR32_REG
                             60 	.globl _NR31_REG
                             61 	.globl _NR30_REG
                             62 	.globl _NR24_REG
                             63 	.globl _NR23_REG
                             64 	.globl _NR22_REG
                             65 	.globl _NR21_REG
                             66 	.globl _NR14_REG
                             67 	.globl _NR13_REG
                             68 	.globl _NR12_REG
                             69 	.globl _NR11_REG
                             70 	.globl _NR10_REG
                             71 	.globl _IF_REG
                             72 	.globl _TAC_REG
                             73 	.globl _TMA_REG
                             74 	.globl _TIMA_REG
                             75 	.globl _DIV_REG
                             76 	.globl _SC_REG
                             77 	.globl _SB_REG
                             78 	.globl _P1_REG
                             79 	.globl __io_out
                             80 	.globl __io_in
                             81 	.globl __io_status
                             82 	.globl _sys_time
                             83 	.globl __cpu
                             84 ;--------------------------------------------------------
                             85 ; special function registers
                             86 ;--------------------------------------------------------
                             87 ;--------------------------------------------------------
                             88 ; special function bits 
                             89 ;--------------------------------------------------------
                             90 ;--------------------------------------------------------
                             91 ; internal ram data
                             92 ;--------------------------------------------------------
                             93 	.area _DATA
                             94 ;--------------------------------------------------------
                             95 ; overlayable items in internal ram 
                             96 ;--------------------------------------------------------
                             97 	.area _OVERLAY
                             98 ;--------------------------------------------------------
                             99 ; indirectly addressable internal ram data
                            100 ;--------------------------------------------------------
                            101 	.area _ISEG
                            102 ;--------------------------------------------------------
                            103 ; bit data
                            104 ;--------------------------------------------------------
                            105 	.area _BSEG
                            106 ;--------------------------------------------------------
                            107 ; external ram data
                            108 ;--------------------------------------------------------
                            109 	.area _XSEG
                            110 ;--------------------------------------------------------
                            111 ; global & static initialisations
                            112 ;--------------------------------------------------------
                            113 	.area _GSINIT
                            114 	.area _GSFINAL
                            115 	.area _GSINIT
                            116 ;--------------------------------------------------------
                            117 ; Home
                            118 ;--------------------------------------------------------
                            119 	.area _HOME
                            120 	.area _CODE
                            121 ;--------------------------------------------------------
                            122 ; code
                            123 ;--------------------------------------------------------
                            124 	.area _CODE
                            125 ;	filltest.c 7
                            126 ; genLabel
                            127 ; genFunction
                            128 ;	---------------------------------
                            129 ; Function main
                            130 ; ---------------------------------
   0000                     131 ___main_start:
   0000                     132 _main:
   0000 C5                  133 	push	bc
   0001 E8 F8               134 	lda	sp,-8(sp)
                            135 ;	filltest.c 10
                            136 ; genAssign
                            137 ; AOP_STK for _main_c_1_1
   0003 F8 05               138 	lda	hl,5(sp)
   0005 36 00               139 	ld	(hl),#0x00
                            140 ;	filltest.c 12
                            141 ; genAssign
                            142 ; AOP_STK for _main_a_1_1
   0007 23                  143 	inc	hl
   0008 23                  144 	inc	hl
   0009 36 00               145 	ld	(hl),#0x00
                            146 ; genLabel
   000B                     147 00107$:
                            148 ; genCmpGt
                            149 ; AOP_STK for _main_a_1_1
   000B AF                  150 	xor	a,a
   000C 3E 0F               151 	ld	a,#0x0F
   000E F8 07               152 	lda	hl,7(sp)
   0010 9E                  153 	sbc	a,(hl) ; 2
   0011 DA 9C 00            154 	jp	c,00110$
                            155 ;	filltest.c 13
                            156 ; genAssign
                            157 ; AOP_STK for _main_b_1_1
   0014 2B                  158 	dec	hl
   0015 36 00               159 	ld	(hl),#0x00
                            160 ; genRightShift
                            161 ; AOP_STK for _main_a_1_1
                            162 ; AOP_STK for _main_d_1_1
                            163 ; shift right 	result 1, left 1
   0017 23                  164 	inc	hl
   0018 7E                  165 	ld	a,(hl)
   0019 CB 3F               166 	srl	a
   001B CB 3F               167 	srl	a
   001D F8 04               168 	lda	hl,4(sp)
   001F 77                  169 	ld	(hl),a
                            170 ; genLabel
   0020                     171 00103$:
                            172 ; genCmpGt
                            173 ; AOP_STK for _main_b_1_1
                            174 ; AOP_STK for _main_sloc0_1_0
   0020 AF                  175 	xor	a,a
   0021 3E 0F               176 	ld	a,#0x0F
   0023 F8 06               177 	lda	hl,6(sp)
   0025 9E                  178 	sbc	a,(hl) ; 2
   0026 3E 00               179 	ld	a,#0x00
   0028 17                  180 	rla
   0029 F8 02               181 	lda	hl,2(sp)
   002B 77                  182 	ld	(hl),a
                            183 ; genIfx
                            184 ; AOP_STK for _main_sloc0_1_0
                            185 ; Removed redundent or a,a
   002C AF                  186 	xor	a,a
   002D B6                  187 	or	a,(hl)
   002E C2 96 00            188 	jp	nz,00109$
                            189 ;	filltest.c 14
                            190 ; genIpush
                            191 ; AOP_STK for _main_a_1_1
   0031 F8 07               192 	lda	hl,7(sp)
   0033 7E                  193 	ld	a,(hl)
   0034 F5                  194 	push	af
   0035 33                  195 	inc	sp
                            196 ; genIpush
                            197 ; AOP_STK for _main_b_1_1
   0036 2B                  198 	dec	hl
   0037 7E                  199 	ld	a,(hl)
   0038 F5                  200 	push	af
   0039 33                  201 	inc	sp
                            202 ; genCall
   003A CD 00 00            203 	call	_gotogxy
   003D E8 02               204 	lda	sp,2(sp)
                            205 ;	filltest.c 15
                            206 ; genAssign
                            207 ; AOP_STK for _main_d_1_1
                            208 ; (registers are the same)
                            209 ;	filltest.c 16
                            210 ; genRightShift
                            211 ; AOP_STK for _main_b_1_1
                            212 ; AOP_STK for _main_e_1_1
                            213 ; shift right 	result 1, left 1
   003F F8 06               214 	lda	hl,6(sp)
   0041 7E                  215 	ld	a,(hl)
   0042 CB 3F               216 	srl	a
   0044 CB 3F               217 	srl	a
   0046 F8 03               218 	lda	hl,3(sp)
   0048 77                  219 	ld	(hl),a
                            220 ; genAssign
                            221 ; AOP_STK for _main_e_1_1
                            222 ; (registers are the same)
                            223 ;	filltest.c 17
                            224 ; genCmpEq
                            225 ; AOP_STK for _main_d_1_1
                            226 ; AOP_STK for _main_e_1_1
                            227 ; AOP_STK for _main_sloc1_1_0
   0049 2A                  228 	ld	a,(hl+)
   004A BE                  229 	cp	(hl) ; 5
   004B 20 04               230 	jr	nz,00136$
   004D 3E 01               231 	ld	a,#0x01
   004F 18 01               232 	jr	00137$
   0051                     233 00136$:
   0051 AF                  234 	xor	a,a
   0052                     235 00137$:
   0052 F8 01               236 	lda	hl,1(sp)
   0054 77                  237 	ld	(hl),a
                            238 ; genIfx
                            239 ; AOP_STK for _main_sloc1_1_0
                            240 ; Removed redundent or a,a
   0055 AF                  241 	xor	a,a
   0056 B6                  242 	or	a,(hl)
   0057 CA 61 00            243 	jp	z,00102$
                            244 ;	filltest.c 18
                            245 ; genMinus
                            246 ; AOP_STK for _main_e_1_1
                            247 ; AOP_STK for _main_d_1_1
   005A 3E 03               248 	ld	a,#0x03
   005C 23                  249 	inc	hl
   005D 23                  250 	inc	hl
   005E 96                  251 	sub	a,(hl)
   005F 23                  252 	inc	hl
   0060 77                  253 	ld	(hl),a
                            254 ; genAssign
                            255 ; AOP_STK for _main_d_1_1
                            256 ; (registers are the same)
                            257 ; genLabel
   0061                     258 00102$:
                            259 ;	filltest.c 20
                            260 ; genIpush
   0061 3E 00               261 	ld	a,#0x00
   0063 F5                  262 	push	af
   0064 33                  263 	inc	sp
                            264 ; genIpush
                            265 ; AOP_STK for _main_e_1_1
   0065 F8 04               266 	lda	hl,4(sp)
   0067 7E                  267 	ld	a,(hl)
   0068 F5                  268 	push	af
   0069 33                  269 	inc	sp
                            270 ; genIpush
                            271 ; AOP_STK for _main_d_1_1
   006A 23                  272 	inc	hl
   006B 7E                  273 	ld	a,(hl)
   006C F5                  274 	push	af
   006D 33                  275 	inc	sp
                            276 ; genCall
   006E CD 00 00            277 	call	_color
   0071 E8 03               278 	lda	sp,3(sp)
                            279 ;	filltest.c 21
                            280 ; genAssign
                            281 ; AOP_STK for _main_c_1_1
   0073 F8 05               282 	lda	hl,5(sp)
   0075 4E                  283 	ld	c,(hl)
                            284 ; genPlus
                            285 ; AOP_STK for _main_c_1_1
                            286 ; AOP_STK for _main_sloc2_1_0
                            287 ; genPlusIncr
                            288 ;	genPlusIncr failed
   0076 7E                  289 	ld	a,(hl)
   0077 C6 01               290 	add	a,#0x01
   0079 F8 00               291 	lda	hl,0(sp)
   007B 77                  292 	ld	(hl),a
                            293 ; genAssign
                            294 ; AOP_STK for _main_sloc2_1_0
                            295 ; AOP_STK for _main_c_1_1
   007C 7E                  296 	ld	a,(hl)
   007D F8 05               297 	lda	hl,5(sp)
   007F 77                  298 	ld	(hl),a
                            299 ; genIpush
   0080 79                  300 	ld	a,c
   0081 F5                  301 	push	af
   0082 33                  302 	inc	sp
                            303 ; genIpush
   0083 21 0F 02            304 	ld	hl,#__str_0 + 0
   0086 E5                  305 	push	hl
                            306 ; genCall
   0087 CD 00 00            307 	call	_gprintf
   008A E8 03               308 	lda	sp,3(sp)
                            309 ;	filltest.c 13
                            310 ; genPlus
                            311 ; AOP_STK for _main_b_1_1
                            312 ; genPlusIncr
                            313 ;	genPlusIncr failed
   008C F8 06               314 	lda	hl,6(sp)
   008E 7E                  315 	ld	a,(hl)
   008F C6 01               316 	add	a,#0x01
   0091 47                  317 	ld	b,a
                            318 ; genAssign
                            319 ; AOP_STK for _main_b_1_1
   0092 70                  320 	ld	(hl),b
                            321 ; genGoto
   0093 C3 20 00            322 	jp	00103$
                            323 ; genLabel
   0096                     324 00109$:
                            325 ;	filltest.c 12
                            326 ; genPlus
                            327 ; AOP_STK for _main_a_1_1
                            328 ; genPlusIncr
   0096 F8 07               329 	lda	hl,7(sp)
   0098 34                  330 	inc	(hl)
                            331 ; genGoto
   0099 C3 0B 00            332 	jp	00107$
                            333 ; genLabel
   009C                     334 00110$:
                            335 ;	filltest.c 26
                            336 ; genIpush
   009C 3E 00               337 	ld	a,#0x00
   009E F5                  338 	push	af
   009F 33                  339 	inc	sp
                            340 ; genIpush
   00A0 3E 00               341 	ld	a,#0x00
   00A2 F5                  342 	push	af
   00A3 33                  343 	inc	sp
                            344 ; genIpush
   00A4 3E 01               345 	ld	a,#0x01
   00A6 F5                  346 	push	af
   00A7 33                  347 	inc	sp
                            348 ; genCall
   00A8 CD 00 00            349 	call	_color
   00AB E8 03               350 	lda	sp,3(sp)
                            351 ;	filltest.c 27
                            352 ; genIpush
   00AD 3E 01               353 	ld	a,#0x01
   00AF F5                  354 	push	af
   00B0 33                  355 	inc	sp
                            356 ; genIpush
   00B1 3E 0F               357 	ld	a,#0x0F
   00B3 F5                  358 	push	af
   00B4 33                  359 	inc	sp
                            360 ; genIpush
   00B5 3E 14               361 	ld	a,#0x14
   00B7 F5                  362 	push	af
   00B8 33                  363 	inc	sp
                            364 ; genIpush
   00B9 3E 8C               365 	ld	a,#0x8C
   00BB F5                  366 	push	af
   00BC 33                  367 	inc	sp
                            368 ; genCall
   00BD CD 00 00            369 	call	_circle
   00C0 E8 04               370 	lda	sp,4(sp)
                            371 ;	filltest.c 28
                            372 ; genIpush
   00C2 3E 00               373 	ld	a,#0x00
   00C4 F5                  374 	push	af
   00C5 33                  375 	inc	sp
                            376 ; genIpush
   00C6 3E 00               377 	ld	a,#0x00
   00C8 F5                  378 	push	af
   00C9 33                  379 	inc	sp
                            380 ; genIpush
   00CA 3E 03               381 	ld	a,#0x03
   00CC F5                  382 	push	af
   00CD 33                  383 	inc	sp
                            384 ; genCall
   00CE CD 00 00            385 	call	_color
   00D1 E8 03               386 	lda	sp,3(sp)
                            387 ;	filltest.c 29
                            388 ; genIpush
   00D3 3E 00               389 	ld	a,#0x00
   00D5 F5                  390 	push	af
   00D6 33                  391 	inc	sp
                            392 ; genIpush
   00D7 3E 0A               393 	ld	a,#0x0A
   00D9 F5                  394 	push	af
   00DA 33                  395 	inc	sp
                            396 ; genIpush
   00DB 3E 14               397 	ld	a,#0x14
   00DD F5                  398 	push	af
   00DE 33                  399 	inc	sp
                            400 ; genIpush
   00DF 3E 8C               401 	ld	a,#0x8C
   00E1 F5                  402 	push	af
   00E2 33                  403 	inc	sp
                            404 ; genCall
   00E3 CD 00 00            405 	call	_circle
   00E6 E8 04               406 	lda	sp,4(sp)
                            407 ;	filltest.c 30
                            408 ; genIpush
   00E8 3E 02               409 	ld	a,#0x02
   00EA F5                  410 	push	af
   00EB 33                  411 	inc	sp
                            412 ; genIpush
   00EC 3E 00               413 	ld	a,#0x00
   00EE F5                  414 	push	af
   00EF 33                  415 	inc	sp
                            416 ; genIpush
   00F0 3E 02               417 	ld	a,#0x02
   00F2 F5                  418 	push	af
   00F3 33                  419 	inc	sp
                            420 ; genCall
   00F4 CD 00 00            421 	call	_color
   00F7 E8 03               422 	lda	sp,3(sp)
                            423 ;	filltest.c 31
                            424 ; genIpush
   00F9 3E 01               425 	ld	a,#0x01
   00FB F5                  426 	push	af
   00FC 33                  427 	inc	sp
                            428 ; genIpush
   00FD 3E 1E               429 	ld	a,#0x1E
   00FF F5                  430 	push	af
   0100 33                  431 	inc	sp
                            432 ; genIpush
   0101 3E 28               433 	ld	a,#0x28
   0103 F5                  434 	push	af
   0104 33                  435 	inc	sp
                            436 ; genIpush
   0105 3E 78               437 	ld	a,#0x78
   0107 F5                  438 	push	af
   0108 33                  439 	inc	sp
                            440 ; genCall
   0109 CD 00 00            441 	call	_circle
   010C E8 04               442 	lda	sp,4(sp)
                            443 ;	filltest.c 32
                            444 ; genIpush
   010E 3E 8F               445 	ld	a,#0x8F
   0110 F5                  446 	push	af
   0111 33                  447 	inc	sp
                            448 ; genIpush
   0112 3E 9F               449 	ld	a,#0x9F
   0114 F5                  450 	push	af
   0115 33                  451 	inc	sp
                            452 ; genIpush
   0116 3E 00               453 	ld	a,#0x00
   0118 F5                  454 	push	af
   0119 33                  455 	inc	sp
                            456 ; genIpush
   011A 3E 00               457 	ld	a,#0x00
   011C F5                  458 	push	af
   011D 33                  459 	inc	sp
                            460 ; genCall
   011E CD 00 00            461 	call	_line
   0121 E8 04               462 	lda	sp,4(sp)
                            463 ;	filltest.c 33
                            464 ; genIpush
   0123 3E 00               465 	ld	a,#0x00
   0125 F5                  466 	push	af
   0126 33                  467 	inc	sp
                            468 ; genIpush
   0127 3E 01               469 	ld	a,#0x01
   0129 F5                  470 	push	af
   012A 33                  471 	inc	sp
                            472 ; genIpush
   012B 3E 03               473 	ld	a,#0x03
   012D F5                  474 	push	af
   012E 33                  475 	inc	sp
                            476 ; genCall
   012F CD 00 00            477 	call	_color
   0132 E8 03               478 	lda	sp,3(sp)
                            479 ;	filltest.c 34
                            480 ; genIpush
   0134 3E 00               481 	ld	a,#0x00
   0136 F5                  482 	push	af
   0137 33                  483 	inc	sp
                            484 ; genIpush
   0138 3E 8F               485 	ld	a,#0x8F
   013A F5                  486 	push	af
   013B 33                  487 	inc	sp
                            488 ; genIpush
   013C 3E 28               489 	ld	a,#0x28
   013E F5                  490 	push	af
   013F 33                  491 	inc	sp
                            492 ; genIpush
   0140 3E 82               493 	ld	a,#0x82
   0142 F5                  494 	push	af
   0143 33                  495 	inc	sp
                            496 ; genIpush
   0144 3E 00               497 	ld	a,#0x00
   0146 F5                  498 	push	af
   0147 33                  499 	inc	sp
                            500 ; genCall
   0148 CD 00 00            501 	call	_box
   014B E8 05               502 	lda	sp,5(sp)
                            503 ;	filltest.c 35
                            504 ; genIpush
   014D 3E 01               505 	ld	a,#0x01
   014F F5                  506 	push	af
   0150 33                  507 	inc	sp
                            508 ; genIpush
   0151 3E 8F               509 	ld	a,#0x8F
   0153 F5                  510 	push	af
   0154 33                  511 	inc	sp
                            512 ; genIpush
   0155 3E 5A               513 	ld	a,#0x5A
   0157 F5                  514 	push	af
   0158 33                  515 	inc	sp
                            516 ; genIpush
   0159 3E 82               517 	ld	a,#0x82
   015B F5                  518 	push	af
   015C 33                  519 	inc	sp
                            520 ; genIpush
   015D 3E 32               521 	ld	a,#0x32
   015F F5                  522 	push	af
   0160 33                  523 	inc	sp
                            524 ; genCall
   0161 CD 00 00            525 	call	_box
   0164 E8 05               526 	lda	sp,5(sp)
                            527 ;	filltest.c 38
                            528 ; genAssign
                            529 ; AOP_STK for _main_c_1_1
   0166 F8 05               530 	lda	hl,5(sp)
   0168 36 00               531 	ld	(hl),#0x00
                            532 ; genLabel
   016A                     533 00119$:
                            534 ; genCmpGt
                            535 ; AOP_STK for _main_c_1_1
   016A AF                  536 	xor	a,a
   016B 3E 8F               537 	ld	a,#0x8F
   016D F8 05               538 	lda	hl,5(sp)
   016F 9E                  539 	sbc	a,(hl) ; 2
   0170 DA 0B 02            540 	jp	c,00123$
                            541 ;	filltest.c 39
                            542 ; genAssign
                            543 ; AOP_STK for _main_b_1_1
   0173 23                  544 	inc	hl
   0174 36 00               545 	ld	(hl),#0x00
                            546 ; genLabel
   0176                     547 00115$:
                            548 ; genCmpGt
                            549 ; AOP_STK for _main_b_1_1
                            550 ; AOP_STK for _main_sloc2_1_0
   0176 AF                  551 	xor	a,a
   0177 3E 8E               552 	ld	a,#0x8E
   0179 F8 06               553 	lda	hl,6(sp)
   017B 9E                  554 	sbc	a,(hl) ; 2
   017C 3E 00               555 	ld	a,#0x00
   017E 17                  556 	rla
   017F F8 00               557 	lda	hl,0(sp)
   0181 77                  558 	ld	(hl),a
                            559 ; genIfx
                            560 ; AOP_STK for _main_sloc2_1_0
                            561 ; Removed redundent or a,a
   0182 AF                  562 	xor	a,a
   0183 B6                  563 	or	a,(hl)
   0184 C2 F0 01            564 	jp	nz,00118$
                            565 ;	filltest.c 40
                            566 ; genAssign
                            567 ; AOP_STK for _main_a_1_1
   0187 F8 07               568 	lda	hl,7(sp)
   0189 36 00               569 	ld	(hl),#0x00
                            570 ; genPlus
                            571 ; AOP_STK for _main_b_1_1
                            572 ; genPlusIncr
                            573 ;	genPlusIncr failed
   018B 2B                  574 	dec	hl
   018C 7E                  575 	ld	a,(hl)
   018D C6 01               576 	add	a,#0x01
   018F 47                  577 	ld	b,a
                            578 ; genLabel
   0190                     579 00111$:
                            580 ; genCmpGt
                            581 ; AOP_STK for _main_a_1_1
                            582 ; AOP_STK for _main_sloc1_1_0
   0190 AF                  583 	xor	a,a
   0191 3E 9F               584 	ld	a,#0x9F
   0193 F8 07               585 	lda	hl,7(sp)
   0195 9E                  586 	sbc	a,(hl) ; 2
   0196 3E 00               587 	ld	a,#0x00
   0198 17                  588 	rla
   0199 F8 01               589 	lda	hl,1(sp)
   019B 77                  590 	ld	(hl),a
                            591 ; genIfx
                            592 ; AOP_STK for _main_sloc1_1_0
                            593 ; Removed redundent or a,a
   019C AF                  594 	xor	a,a
   019D B6                  595 	or	a,(hl)
   019E C2 D9 01            596 	jp	nz,00114$
                            597 ;	filltest.c 41
                            598 ; genIpush
   01A1 78                  599 	ld	a,b
   01A2 F5                  600 	push	af
   01A3 33                  601 	inc	sp
                            602 ; genIpush
                            603 ; AOP_STK for _main_a_1_1
   01A4 F8 08               604 	lda	hl,8(sp)
   01A6 7E                  605 	ld	a,(hl)
   01A7 F5                  606 	push	af
   01A8 33                  607 	inc	sp
                            608 ; genCall
   01A9 CD 00 00            609 	call	_getpix
                            610 ; AOP_STK for _main_sloc0_1_0
   01AC F8 04               611 	lda	hl,4(sp)
   01AE 73                  612 	ld	(hl),e
   01AF E8 02               613 	lda	sp,2(sp)
                            614 ; genIpush
   01B1 3E 00               615 	ld	a,#0x00
   01B3 F5                  616 	push	af
   01B4 33                  617 	inc	sp
                            618 ; genIpush
   01B5 3E 00               619 	ld	a,#0x00
   01B7 F5                  620 	push	af
   01B8 33                  621 	inc	sp
                            622 ; genIpush
                            623 ; AOP_STK for _main_sloc0_1_0
   01B9 7E                  624 	ld	a,(hl)
   01BA F5                  625 	push	af
   01BB 33                  626 	inc	sp
                            627 ; genCall
   01BC CD 00 00            628 	call	_color
   01BF E8 03               629 	lda	sp,3(sp)
                            630 ;	filltest.c 42
                            631 ; genIpush
                            632 ; AOP_STK for _main_b_1_1
   01C1 F8 06               633 	lda	hl,6(sp)
   01C3 7E                  634 	ld	a,(hl)
   01C4 F5                  635 	push	af
   01C5 33                  636 	inc	sp
                            637 ; genIpush
                            638 ; AOP_STK for _main_a_1_1
   01C6 23                  639 	inc	hl
   01C7 7E                  640 	ld	a,(hl)
   01C8 F5                  641 	push	af
   01C9 33                  642 	inc	sp
                            643 ; genCall
   01CA CD 00 00            644 	call	_plot_point
   01CD E8 02               645 	lda	sp,2(sp)
                            646 ;	filltest.c 40
                            647 ; genPlus
                            648 ; AOP_STK for _main_a_1_1
                            649 ; genPlusIncr
                            650 ;	genPlusIncr failed
   01CF F8 07               651 	lda	hl,7(sp)
   01D1 7E                  652 	ld	a,(hl)
   01D2 C6 01               653 	add	a,#0x01
   01D4 4F                  654 	ld	c,a
                            655 ; genAssign
                            656 ; AOP_STK for _main_a_1_1
   01D5 71                  657 	ld	(hl),c
                            658 ; genGoto
   01D6 C3 90 01            659 	jp	00111$
                            660 ; genLabel
   01D9                     661 00114$:
                            662 ;	filltest.c 44
                            663 ; genIpush
   01D9 3E 00               664 	ld	a,#0x00
   01DB F5                  665 	push	af
   01DC 33                  666 	inc	sp
                            667 ; genIpush
   01DD 3E 00               668 	ld	a,#0x00
   01DF F5                  669 	push	af
   01E0 33                  670 	inc	sp
                            671 ; genIpush
   01E1 3E 00               672 	ld	a,#0x00
   01E3 F5                  673 	push	af
   01E4 33                  674 	inc	sp
                            675 ; genCall
   01E5 CD 00 00            676 	call	_color
   01E8 E8 03               677 	lda	sp,3(sp)
                            678 ;	filltest.c 39
                            679 ; genAssign
                            680 ; AOP_STK for _main_b_1_1
   01EA F8 06               681 	lda	hl,6(sp)
   01EC 70                  682 	ld	(hl),b
                            683 ; genGoto
   01ED C3 76 01            684 	jp	00115$
                            685 ; genLabel
   01F0                     686 00118$:
                            687 ;	filltest.c 46
                            688 ; genIpush
   01F0 3E 8F               689 	ld	a,#0x8F
   01F2 F5                  690 	push	af
   01F3 33                  691 	inc	sp
                            692 ; genIpush
   01F4 3E 9F               693 	ld	a,#0x9F
   01F6 F5                  694 	push	af
   01F7 33                  695 	inc	sp
                            696 ; genIpush
   01F8 3E 8F               697 	ld	a,#0x8F
   01FA F5                  698 	push	af
   01FB 33                  699 	inc	sp
                            700 ; genIpush
   01FC 3E 00               701 	ld	a,#0x00
   01FE F5                  702 	push	af
   01FF 33                  703 	inc	sp
                            704 ; genCall
   0200 CD 00 00            705 	call	_line
   0203 E8 04               706 	lda	sp,4(sp)
                            707 ;	filltest.c 38
                            708 ; genPlus
                            709 ; AOP_STK for _main_c_1_1
                            710 ; genPlusIncr
   0205 F8 05               711 	lda	hl,5(sp)
   0207 34                  712 	inc	(hl)
                            713 ; genGoto
   0208 C3 6A 01            714 	jp	00119$
                            715 ; genLabel
   020B                     716 00123$:
                            717 ; genEndFunction
   020B E8 08               718 	lda	sp,8(sp)
   020D C1                  719 	pop	bc
   020E C9                  720 	ret
   020F                     721 ___main_end:
   020F                     722 __str_0:
   020F 25 63               723 	.ascii "%c"
   0211 00                  724 	.db 0x00
                            725 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

    _BCPD_REG                          **** GX
    _BCPS_REG                          **** GX
    _BGP_REG                           **** GX
    _DIV_REG                           **** GX
    _DMA_REG                           **** GX
    _HDMA1_REG                         **** GX
    _HDMA2_REG                         **** GX
    _HDMA3_REG                         **** GX
    _HDMA4_REG                         **** GX
    _HDMA5_REG                         **** GX
    _IE_REG                            **** GX
    _IF_REG                            **** GX
    _KEY1_REG                          **** GX
    _LCDC_REG                          **** GX
    _LYC_REG                           **** GX
    _LY_REG                            **** GX
    _NR10_REG                          **** GX
    _NR11_REG                          **** GX
    _NR12_REG                          **** GX
    _NR13_REG                          **** GX
    _NR14_REG                          **** GX
    _NR21_REG                          **** GX
    _NR22_REG                          **** GX
    _NR23_REG                          **** GX
    _NR24_REG                          **** GX
    _NR30_REG                          **** GX
    _NR31_REG                          **** GX
    _NR32_REG                          **** GX
    _NR33_REG                          **** GX
    _NR34_REG                          **** GX
    _NR41_REG                          **** GX
    _NR42_REG                          **** GX
    _NR43_REG                          **** GX
    _NR44_REG                          **** GX
    _NR50_REG                          **** GX
    _NR51_REG                          **** GX
    _NR52_REG                          **** GX
    _OBP0_REG                          **** GX
    _OBP1_REG                          **** GX
    _OCPD_REG                          **** GX
    _OCPS_REG                          **** GX
    _P1_REG                            **** GX
    _RP_REG                            **** GX
    _SB_REG                            **** GX
    _SCX_REG                           **** GX
    _SCY_REG                           **** GX
    _SC_REG                            **** GX
    _STAT_REG                          **** GX
    _SVBK_REG                          **** GX
    _TAC_REG                           **** GX
    _TIMA_REG                          **** GX
    _TMA_REG                           **** GX
    _VBK_REG                           **** GX
    _WX_REG                            **** GX
    _WY_REG                            **** GX
  0 ___main_end                        020F R
  0 ___main_start                      0000 R
    __cpu                              **** GX
    __io_in                            **** GX
    __io_out                           **** GX
    __io_status                        **** GX
  0 __str_0                            020F R
    _box                               **** GX
    _circle                            **** GX
    _color                             **** GX
    _getpix                            **** GX
    _gotogxy                           **** GX
    _gprintf                           **** GX
    _line                              **** GX
  0 _main                              0000 GR
    _plot_point                        **** GX
    _sys_time                          **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  212   flags 0
   1 _DATA                              size    0   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
