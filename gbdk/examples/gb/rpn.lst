                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.2.1 Wed Nov 16 08:04:22 2016
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc75920
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _read_op
                             13 	.globl _top
                             14 	.globl _pop
                             15 	.globl _push
                             16 	.globl _isdigit
                             17 	.globl _gets
                             18 	.globl _puts
                             19 	.globl _printf
                             20 	.globl _n
                             21 	.globl _pos
                             22 	.globl _s
                             23 	.globl _stack
                             24 	.globl _sp
                             25 	.globl _main
                             26 	.globl _read_op
                             27 	.globl _top
                             28 	.globl _pop
                             29 	.globl _push
                             30 ;--------------------------------------------------------
                             31 ; Externals used
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; special function registers
                             35 ;--------------------------------------------------------
                             36 ;--------------------------------------------------------
                             37 ; special function bits 
                             38 ;--------------------------------------------------------
                             39 ;--------------------------------------------------------
                             40 ; internal ram data
                             41 ;--------------------------------------------------------
                             42 	.area _DATA
   0000                      43 _sp::
   0000                      44 	.ds 1
   0001                      45 _stack::
   0001                      46 	.ds 80
   0051                      47 _s::
   0051                      48 	.ds 40
   0079                      49 _pos::
   0079                      50 	.ds 1
   007A                      51 _n::
   007A                      52 	.ds 2
                             53 ;--------------------------------------------------------
                             54 ; overlayable items in internal ram 
                             55 ;--------------------------------------------------------
                             56 	.area _OVERLAY
                             57 ;--------------------------------------------------------
                             58 ; indirectly addressable internal ram data
                             59 ;--------------------------------------------------------
                             60 	.area _ISEG
                             61 ;--------------------------------------------------------
                             62 ; bit data
                             63 ;--------------------------------------------------------
                             64 	.area _BSEG
                             65 ;--------------------------------------------------------
                             66 ; external ram data
                             67 ;--------------------------------------------------------
                             68 	.area _XSEG
                             69 ;--------------------------------------------------------
                             70 ; global & static initialisations
                             71 ;--------------------------------------------------------
                             72 	.area _GSINIT
                             73 	.area _GSFINAL
                             74 	.area _GSINIT
                             75 ;--------------------------------------------------------
                             76 ; Home
                             77 ;--------------------------------------------------------
                             78 	.area _HOME
                             79 	.area _CODE
                             80 ;--------------------------------------------------------
                             81 ; code
                             82 ;--------------------------------------------------------
                             83 	.area _CODE
                             84 ;	rpn.c 15
                             85 ; genLabel
                             86 ; genFunction
                             87 ;	---------------------------------
                             88 ; Function push
                             89 ; ---------------------------------
   0000                      90 ___push_start:
   0000                      91 _push:
   0000 C5                   92 	push	bc
                             93 	
                             94 ;	rpn.c 17
                             95 ; genCmpLt
                             96 ; AOP_HL for _sp
   0001 21 00 00             97 	ld	hl,#_sp + 0
   0004 7E                   98 	ld	a,(hl)
   0005 FE 28                99 	cp	#0x28
   0007 D2 23 00            100 	jp	nc,00102$
                            101 ;	rpn.c 18
                            102 ; genAssign
                            103 ; AOP_HL for _sp
   000A 4E                  104 	ld	c,(hl)
                            105 ; genPlus
                            106 ; AOP_HL for _sp
                            107 ; genPlusIncr
   000B 34                  108 	inc	(hl)
                            109 ; genLeftShift
   000C 79                  110 	ld	a,c
   000D 87                  111 	add	a,a
   000E 4F                  112 	ld	c,a
                            113 ; genPlus
                            114 ;	genPlusIncr failed
   000F 3E 01               115 	ld	a,#<_stack
   0011 81                  116 	add	a,c
   0012 5F                  117 	ld	e,a
   0013 3E 00               118 	ld	a,#>_stack
   0015 CE 00               119 	adc	a,#0x00
   0017 57                  120 	ld	d,a
                            121 ; genAssign (pointer)
                            122 ; AOP_STK for 
   0018 F8 04               123 	lda	hl,4(sp)
   001A 7E                  124 	ld	a,(hl)
   001B 12                  125 	ld	(de),a
   001C 13                  126 	inc	de
   001D 23                  127 	inc	hl
   001E 7E                  128 	ld	a,(hl)
   001F 12                  129 	ld	(de),a
                            130 ; genGoto
   0020 C3 2C 00            131 	jp	00104$
                            132 ; genLabel
   0023                     133 00102$:
                            134 ;	rpn.c 20
                            135 ; genIpush
   0023 21 2E 00            136 	ld	hl,#__str_0 + 0
   0026 E5                  137 	push	hl
                            138 ; genCall
   0027 CD 00 00            139 	call	_puts
   002A E8 02               140 	lda	sp,2(sp)
                            141 ; genLabel
   002C                     142 00104$:
                            143 ; genEndFunction
                            144 	
   002C C1                  145 	pop	bc
   002D C9                  146 	ret
   002E                     147 ___push_end:
   002E                     148 __str_0:
   002E 53 74 61 63 6B 20   149 	.ascii "Stack full"
        66 75 6C 6C
   0038 00                  150 	.db 0x00
                            151 ;	rpn.c 23
                            152 ; genLabel
                            153 ; genFunction
                            154 ;	---------------------------------
                            155 ; Function pop
                            156 ; ---------------------------------
   0039                     157 ___pop_start:
   0039                     158 _pop:
   0039 C5                  159 	push	bc
                            160 	
                            161 ;	rpn.c 25
                            162 ; genCmpGt
                            163 ; AOP_HL for _sp
   003A AF                  164 	xor	a,a
   003B 3E 00               165 	ld	a,#0x00
   003D 21 00 00            166 	ld	hl,#_sp + 0
   0040 9E                  167 	sbc	a,(hl) ; 2
   0041 D2 5B 00            168 	jp	nc,00102$
                            169 ;	rpn.c 26
                            170 ; genMinus
                            171 ; AOP_HL for _sp
   0044 35                  172 	dec	(hl)
                            173 ; genLeftShift
                            174 ; AOP_HL for _sp
   0045 7E                  175 	ld	a,(hl)
   0046 87                  176 	add	a,a
   0047 4F                  177 	ld	c,a
                            178 ; genPlus
                            179 ;	genPlusIncr failed
   0048 3E 01               180 	ld	a,#<_stack
   004A 81                  181 	add	a,c
   004B 5F                  182 	ld	e,a
   004C 3E 00               183 	ld	a,#>_stack
   004E CE 00               184 	adc	a,#0x00
   0050 57                  185 	ld	d,a
                            186 ; genPointerGet
                            187 ; Removed redundent load
                            188 ; Removed redundent load
   0051 1A                  189 	ld	a,(de)
   0052 4F                  190 	ld	c,a
   0053 13                  191 	inc	de
   0054 1A                  192 	ld	a,(de)
   0055 47                  193 	ld	b,a
                            194 ; genRet
   0056 59                  195 	ld	e,c
   0057 50                  196 	ld	d,b
   0058 C3 67 00            197 	jp	00104$
                            198 ; genLabel
   005B                     199 00102$:
                            200 ;	rpn.c 28
                            201 ; genIpush
   005B 21 69 00            202 	ld	hl,#__str_1 + 0
   005E E5                  203 	push	hl
                            204 ; genCall
   005F CD 00 00            205 	call	_puts
   0062 E8 02               206 	lda	sp,2(sp)
                            207 ;	rpn.c 29
                            208 ; genRet
   0064 11 00 00            209 	ld	de,#0x0000
                            210 ; genLabel
   0067                     211 00104$:
                            212 ; genEndFunction
                            213 	
   0067 C1                  214 	pop	bc
   0068 C9                  215 	ret
   0069                     216 ___pop_end:
   0069                     217 __str_1:
   0069 53 74 61 63 6B 20   218 	.ascii "Stack empty"
        65 6D 70 74 79
   0074 00                  219 	.db 0x00
                            220 ;	rpn.c 32
                            221 ; genLabel
                            222 ; genFunction
                            223 ;	---------------------------------
                            224 ; Function top
                            225 ; ---------------------------------
   0075                     226 ___top_start:
   0075                     227 _top:
   0075 C5                  228 	push	bc
                            229 	
                            230 ;	rpn.c 34
                            231 ; genCmpGt
                            232 ; AOP_HL for _sp
   0076 AF                  233 	xor	a,a
   0077 3E 00               234 	ld	a,#0x00
   0079 21 00 00            235 	ld	hl,#_sp + 0
   007C 9E                  236 	sbc	a,(hl) ; 2
   007D D2 9A 00            237 	jp	nc,00102$
                            238 ;	rpn.c 35
                            239 ; genMinus
                            240 ; AOP_HL for _sp
   0080 7E                  241 	ld	a,(hl)
   0081 C6 FF               242 	add	a,#0xFF
   0083 4F                  243 	ld	c,a
                            244 ; genLeftShift
   0084 79                  245 	ld	a,c
   0085 87                  246 	add	a,a
   0086 4F                  247 	ld	c,a
                            248 ; genPlus
                            249 ;	genPlusIncr failed
   0087 3E 01               250 	ld	a,#<_stack
   0089 81                  251 	add	a,c
   008A 5F                  252 	ld	e,a
   008B 3E 00               253 	ld	a,#>_stack
   008D CE 00               254 	adc	a,#0x00
   008F 57                  255 	ld	d,a
                            256 ; genPointerGet
                            257 ; Removed redundent load
                            258 ; Removed redundent load
   0090 1A                  259 	ld	a,(de)
   0091 4F                  260 	ld	c,a
   0092 13                  261 	inc	de
   0093 1A                  262 	ld	a,(de)
   0094 47                  263 	ld	b,a
                            264 ; genRet
   0095 59                  265 	ld	e,c
   0096 50                  266 	ld	d,b
   0097 C3 A6 00            267 	jp	00104$
                            268 ; genLabel
   009A                     269 00102$:
                            270 ;	rpn.c 37
                            271 ; genIpush
   009A 21 A8 00            272 	ld	hl,#__str_2 + 0
   009D E5                  273 	push	hl
                            274 ; genCall
   009E CD 00 00            275 	call	_puts
   00A1 E8 02               276 	lda	sp,2(sp)
                            277 ;	rpn.c 38
                            278 ; genRet
   00A3 11 00 00            279 	ld	de,#0x0000
                            280 ; genLabel
   00A6                     281 00104$:
                            282 ; genEndFunction
                            283 	
   00A6 C1                  284 	pop	bc
   00A7 C9                  285 	ret
   00A8                     286 ___top_end:
   00A8                     287 __str_2:
   00A8 53 74 61 63 6B 20   288 	.ascii "Stack empty"
        65 6D 70 74 79
   00B3 00                  289 	.db 0x00
                            290 ;	rpn.c 41
                            291 ; genLabel
                            292 ; genFunction
                            293 ;	---------------------------------
                            294 ; Function read_op
                            295 ; ---------------------------------
   00B4                     296 ___read_op_start:
   00B4                     297 _read_op:
   00B4 C5                  298 	push	bc
   00B5 E8 FE               299 	lda	sp,-2(sp)
                            300 ;	rpn.c 43
                            301 ; genCmpEq
                            302 ; AOP_HL for _pos
   00B7 21 79 00            303 	ld	hl,#_pos + 0
   00BA 7E                  304 	ld	a,(hl)
   00BB B7                  305 	or	a,a
   00BC C2 C1 00            306 	jp	nz,00123$
   00BF 18 03               307 	jr	00124$
   00C1                     308 00123$:
   00C1 C3 CD 00            309 	jp	00118$
   00C4                     310 00124$:
                            311 ;	rpn.c 44
                            312 ; genIpush
   00C4 21 51 00            313 	ld	hl,#_s + 0
   00C7 E5                  314 	push	hl
                            315 ; genCall
   00C8 CD 00 00            316 	call	_gets
   00CB E8 02               317 	lda	sp,2(sp)
                            318 ;	rpn.c 47
                            319 ; genLabel
   00CD                     320 00118$:
                            321 ; genLabel
   00CD                     322 00104$:
                            323 ; genAssign
                            324 ; AOP_HL for _pos
   00CD 21 79 00            325 	ld	hl,#_pos + 0
   00D0 4E                  326 	ld	c,(hl)
                            327 ; genPlus
                            328 ;	genPlusIncr failed
   00D1 3E 51               329 	ld	a,#<_s
   00D3 81                  330 	add	a,c
   00D4 5F                  331 	ld	e,a
   00D5 3E 00               332 	ld	a,#>_s
   00D7 CE 00               333 	adc	a,#0x00
   00D9 57                  334 	ld	d,a
                            335 ; genPointerGet
   00DA 1A                  336 	ld	a,(de)
   00DB 4F                  337 	ld	c,a
                            338 ; genCmpEq
   00DC 79                  339 	ld	a,c ; 2
   00DD FE 20               340 	cp	a,#0x20
                            341 ; Rule 5
   00DF CA FC 00            342 	jp	z,00105$
   00E2                     343 00125$:
                            344 ; genAssign
                            345 ; AOP_HL for _pos
   00E2 21 79 00            346 	ld	hl,#_pos + 0
   00E5 4E                  347 	ld	c,(hl)
                            348 ; genPlus
                            349 ;	genPlusIncr failed
   00E6 3E 51               350 	ld	a,#<_s
   00E8 81                  351 	add	a,c
   00E9 5F                  352 	ld	e,a
   00EA 3E 00               353 	ld	a,#>_s
   00EC CE 00               354 	adc	a,#0x00
   00EE 57                  355 	ld	d,a
                            356 ; genPointerGet
   00EF 1A                  357 	ld	a,(de)
   00F0 4F                  358 	ld	c,a
                            359 ; genCmpEq
   00F1 79                  360 	ld	a,c ; 2
   00F2 FE 09               361 	cp	a,#0x09
   00F4 C2 F9 00            362 	jp	nz,00126$
   00F7 18 03               363 	jr	00127$
   00F9                     364 00126$:
   00F9 C3 03 01            365 	jp	00106$
   00FC                     366 00127$:
                            367 ; genLabel
   00FC                     368 00105$:
                            369 ;	rpn.c 48
                            370 ; genPlus
                            371 ; AOP_HL for _pos
                            372 ; genPlusIncr
   00FC 21 79 00            373 	ld	hl,#_pos + 0
   00FF 34                  374 	inc	(hl)
                            375 ; genGoto
   0100 C3 CD 00            376 	jp	00104$
                            377 ; genLabel
   0103                     378 00106$:
                            379 ;	rpn.c 50
                            380 ; genAssign
                            381 ; AOP_HL for _pos
   0103 21 79 00            382 	ld	hl,#_pos + 0
   0106 4E                  383 	ld	c,(hl)
                            384 ; genPlus
                            385 ;	genPlusIncr failed
   0107 3E 51               386 	ld	a,#<_s
   0109 81                  387 	add	a,c
   010A 5F                  388 	ld	e,a
   010B 3E 00               389 	ld	a,#>_s
   010D CE 00               390 	adc	a,#0x00
   010F 57                  391 	ld	d,a
                            392 ; genPointerGet
   0110 1A                  393 	ld	a,(de)
   0111 4F                  394 	ld	c,a
                            395 ; genCmpEq
   0112 79                  396 	ld	a,c
   0113 B7                  397 	or	a,a
   0114 C2 19 01            398 	jp	nz,00128$
   0117 18 03               399 	jr	00129$
   0119                     400 00128$:
   0119 C3 26 01            401 	jp	00108$
   011C                     402 00129$:
                            403 ;	rpn.c 51
                            404 ; genAssign
                            405 ; AOP_HL for _pos
   011C 21 79 00            406 	ld	hl,#_pos + 0
   011F 36 00               407 	ld	(hl),#0x00
                            408 ;	rpn.c 52
                            409 ; genRet
   0121 1E 0A               410 	ld	e,#0x0A
   0123 C3 D2 01            411 	jp	00114$
                            412 ; genLabel
   0126                     413 00108$:
                            414 ;	rpn.c 55
                            415 ; genAssign
                            416 ; AOP_HL for _pos
   0126 21 79 00            417 	ld	hl,#_pos + 0
   0129 4E                  418 	ld	c,(hl)
                            419 ; genPlus
                            420 ;	genPlusIncr failed
   012A 3E 51               421 	ld	a,#<_s
   012C 81                  422 	add	a,c
   012D 5F                  423 	ld	e,a
   012E 3E 00               424 	ld	a,#>_s
   0130 CE 00               425 	adc	a,#0x00
   0132 57                  426 	ld	d,a
                            427 ; genPointerGet
   0133 1A                  428 	ld	a,(de)
   0134 4F                  429 	ld	c,a
                            430 ; genIpush
   0135 79                  431 	ld	a,c
   0136 F5                  432 	push	af
   0137 33                  433 	inc	sp
                            434 ; genCall
   0138 CD 00 00            435 	call	_isdigit
   013B 4B                  436 	ld	c,e
   013C E8 01               437 	lda	sp,1(sp)
                            438 ; genIfx
                            439 ; Removed redundent or a,a
   013E AF                  440 	xor	a,a
   013F B1                  441 	or	a,c
   0140 C2 57 01            442 	jp	nz,00110$
                            443 ;	rpn.c 56
                            444 ; genAssign
                            445 ; AOP_HL for _pos
   0143 21 79 00            446 	ld	hl,#_pos + 0
   0146 4E                  447 	ld	c,(hl)
                            448 ; genPlus
                            449 ; AOP_HL for _pos
                            450 ; genPlusIncr
   0147 34                  451 	inc	(hl)
                            452 ; genPlus
                            453 ;	genPlusIncr failed
   0148 3E 51               454 	ld	a,#<_s
   014A 81                  455 	add	a,c
   014B 5F                  456 	ld	e,a
   014C 3E 00               457 	ld	a,#>_s
   014E CE 00               458 	adc	a,#0x00
   0150 57                  459 	ld	d,a
                            460 ; genPointerGet
   0151 1A                  461 	ld	a,(de)
   0152 4F                  462 	ld	c,a
                            463 ; genRet
   0153 59                  464 	ld	e,c
   0154 C3 D2 01            465 	jp	00114$
                            466 ; genLabel
   0157                     467 00110$:
                            468 ;	rpn.c 58
                            469 ; genAssign
                            470 ; AOP_HL for _pos
   0157 21 79 00            471 	ld	hl,#_pos + 0
   015A 4E                  472 	ld	c,(hl)
                            473 ; genPlus
                            474 ;	genPlusIncr failed
   015B 3E 51               475 	ld	a,#<_s
   015D 81                  476 	add	a,c
   015E 5F                  477 	ld	e,a
   015F 3E 00               478 	ld	a,#>_s
   0161 CE 00               479 	adc	a,#0x00
   0163 57                  480 	ld	d,a
                            481 ; genPointerGet
   0164 1A                  482 	ld	a,(de)
   0165 4F                  483 	ld	c,a
                            484 ; genMinus
   0166 79                  485 	ld	a,c
   0167 C6 D0               486 	add	a,#0xD0
   0169 4F                  487 	ld	c,a
                            488 ; genCast
                            489 ; AOP_HL for _n
   016A 21 7A 00            490 	ld	hl,#_n + 0
   016D 71                  491 	ld	(hl),c
   016E 79                  492 	ld	a,c
                            493 ; genCast: sign extend untested.
   016F 17                  494 	rla	
   0170 9F                  495 	sbc	a,a
   0171 23                  496 	inc	hl
   0172 77                  497 	ld	(hl),a
                            498 ;	rpn.c 59
                            499 ; genLabel
   0173                     500 00111$:
                            501 ; genPlus
                            502 ; AOP_HL for _pos
                            503 ; genPlusIncr
   0173 21 79 00            504 	ld	hl,#_pos + 0
   0176 34                  505 	inc	(hl)
                            506 ; genAssign
                            507 ; AOP_HL for _pos
   0177 4E                  508 	ld	c,(hl)
                            509 ; genPlus
                            510 ;	genPlusIncr failed
   0178 3E 51               511 	ld	a,#<_s
   017A 81                  512 	add	a,c
   017B 5F                  513 	ld	e,a
   017C 3E 00               514 	ld	a,#>_s
   017E CE 00               515 	adc	a,#0x00
   0180 57                  516 	ld	d,a
                            517 ; genPointerGet
   0181 1A                  518 	ld	a,(de)
   0182 4F                  519 	ld	c,a
                            520 ; genIpush
   0183 79                  521 	ld	a,c
   0184 F5                  522 	push	af
   0185 33                  523 	inc	sp
                            524 ; genCall
   0186 CD 00 00            525 	call	_isdigit
   0189 4B                  526 	ld	c,e
   018A E8 01               527 	lda	sp,1(sp)
                            528 ; genIfx
                            529 ; Removed redundent or a,a
   018C AF                  530 	xor	a,a
   018D B1                  531 	or	a,c
   018E CA D0 01            532 	jp	z,00113$
                            533 ;	rpn.c 60
                            534 ; genIpush
   0191 21 0A 00            535 	ld	hl,#0x000A
   0194 E5                  536 	push	hl
                            537 ; genIpush
                            538 ; AOP_HL for _n
   0195 21 7A 00            539 	ld	hl,#_n + 0
   0198 2A                  540 	ld	a,(hl+)
   0199 66                  541 	ld	h,(hl)
   019A 6F                  542 	ld	l,a
   019B E5                  543 	push	hl
                            544 ; genCall
   019C CD 00 00            545 	call	__mulsint
                            546 ; AOP_STK for _read_op_sloc0_1_0
   019F F8 05               547 	lda	hl,5(sp)
   01A1 72                  548 	ld	(hl),d
   01A2 2B                  549 	dec	hl
   01A3 73                  550 	ld	(hl),e
   01A4 E8 04               551 	lda	sp,4(sp)
                            552 ; genAssign
                            553 ; AOP_HL for _pos
   01A6 21 79 00            554 	ld	hl,#_pos + 0
   01A9 4E                  555 	ld	c,(hl)
                            556 ; genPlus
                            557 ;	genPlusIncr failed
   01AA 3E 51               558 	ld	a,#<_s
   01AC 81                  559 	add	a,c
   01AD 5F                  560 	ld	e,a
   01AE 3E 00               561 	ld	a,#>_s
   01B0 CE 00               562 	adc	a,#0x00
   01B2 57                  563 	ld	d,a
                            564 ; genPointerGet
   01B3 1A                  565 	ld	a,(de)
   01B4 4F                  566 	ld	c,a
                            567 ; genCast
                            568 ; Removed redundent load
   01B5 79                  569 	ld	a,c
                            570 ; genCast: sign extend untested.
   01B6 17                  571 	rla	
   01B7 9F                  572 	sbc	a,a
   01B8 47                  573 	ld	b,a
                            574 ; genPlus
                            575 ; AOP_STK for _read_op_sloc0_1_0
                            576 ;	genPlusIncr failed
   01B9 F8 00               577 	lda	hl,0(sp)
   01BB 2A                  578 	ld	a,(hl+)
   01BC 66                  579 	ld	h,(hl)
   01BD 6F                  580 	ld	l,a
   01BE 09                  581 	add	hl,bc
   01BF 4D                  582 	ld	c,l
   01C0 44                  583 	ld	b,h
                            584 ; genMinus
                            585 ; AOP_HL for _n
   01C1 79                  586 	ld	a,c
   01C2 C6 D0               587 	add	a,#0xD0
   01C4 21 7A 00            588 	ld	hl,#_n + 0
   01C7 77                  589 	ld	(hl),a
   01C8 78                  590 	ld	a,b
   01C9 CE FF               591 	adc	a,#0xFF
   01CB 23                  592 	inc	hl
   01CC 77                  593 	ld	(hl),a
                            594 ; genGoto
   01CD C3 73 01            595 	jp	00111$
                            596 ; genLabel
   01D0                     597 00113$:
                            598 ;	rpn.c 62
                            599 ; genRet
   01D0 1E 30               600 	ld	e,#0x30
                            601 ; genLabel
   01D2                     602 00114$:
                            603 ; genEndFunction
   01D2 E8 02               604 	lda	sp,2(sp)
   01D4 C1                  605 	pop	bc
   01D5 C9                  606 	ret
   01D6                     607 ___read_op_end:
                            608 ;	rpn.c 65
                            609 ; genLabel
                            610 ; genFunction
                            611 ;	---------------------------------
                            612 ; Function main
                            613 ; ---------------------------------
   01D6                     614 ___main_start:
   01D6                     615 _main:
   01D6 C5                  616 	push	bc
   01D7 E8 FC               617 	lda	sp,-4(sp)
                            618 ;	rpn.c 70
                            619 ; genIpush
   01D9 21 E3 02            620 	ld	hl,#__str_3 + 0
   01DC E5                  621 	push	hl
                            622 ; genCall
   01DD CD 00 00            623 	call	_puts
   01E0 E8 02               624 	lda	sp,2(sp)
                            625 ;	rpn.c 71
                            626 ; genAssign
                            627 ; AOP_HL for _sp
   01E2 21 00 00            628 	ld	hl,#_sp + 0
   01E5 36 00               629 	ld	(hl),#0x00
                            630 ;	rpn.c 72
                            631 ; genAssign
                            632 ; AOP_HL for _pos
   01E7 21 79 00            633 	ld	hl,#_pos + 0
   01EA 36 00               634 	ld	(hl),#0x00
                            635 ;	rpn.c 74
                            636 ; genLabel
   01EC                     637 00111$:
                            638 ; genIpush
   01EC 21 51 00            639 	ld	hl,#_s + 0
   01EF E5                  640 	push	hl
                            641 ; genCall
   01F0 CD B4 00            642 	call	_read_op
   01F3 4B                  643 	ld	c,e
   01F4 E8 02               644 	lda	sp,2(sp)
                            645 ; genAssign
   01F6 41                  646 	ld	b,c
                            647 ; genCmpEq
   01F7 79                  648 	ld	a,c
   01F8 B7                  649 	or	a,a
                            650 ; Rule 5
   01F9 CA DF 02            651 	jp	z,00114$
   01FC                     652 00125$:
                            653 ;	rpn.c 75
                            654 ; genCmpEq
   01FC 78                  655 	ld	a,b ; 2
   01FD FE 0A               656 	cp	a,#0x0A
                            657 ; Rule 5
   01FF CA CD 02            658 	jp	z,00109$
   0202                     659 00126$:
                            660 ; genCmpEq
   0202 78                  661 	ld	a,b ; 2
   0203 FE 2A               662 	cp	a,#0x2A
                            663 ; Rule 5
   0205 CA 52 02            664 	jp	z,00103$
   0208                     665 00127$:
                            666 ; genCmpEq
   0208 78                  667 	ld	a,b ; 2
   0209 FE 2B               668 	cp	a,#0x2B
                            669 ; Rule 5
   020B CA 34 02            670 	jp	z,00102$
   020E                     671 00128$:
                            672 ; genCmpEq
   020E 78                  673 	ld	a,b ; 2
   020F FE 2D               674 	cp	a,#0x2D
                            675 ; Rule 5
   0211 CA 76 02            676 	jp	z,00104$
   0214                     677 00129$:
                            678 ; genCmpEq
   0214 78                  679 	ld	a,b ; 2
   0215 FE 2F               680 	cp	a,#0x2F
                            681 ; Rule 5
   0217 CA 98 02            682 	jp	z,00105$
   021A                     683 00130$:
                            684 ; genCmpEq
   021A 78                  685 	ld	a,b ; 2
   021B FE 30               686 	cp	a,#0x30
   021D C2 22 02            687 	jp	nz,00131$
   0220 18 03               688 	jr	00132$
   0222                     689 00131$:
   0222 C3 EC 01            690 	jp	00111$
   0225                     691 00132$:
                            692 ;	rpn.c 77
                            693 ; genIpush
                            694 ; AOP_HL for _n
   0225 21 7A 00            695 	ld	hl,#_n + 0
   0228 2A                  696 	ld	a,(hl+)
   0229 66                  697 	ld	h,(hl)
   022A 6F                  698 	ld	l,a
   022B E5                  699 	push	hl
                            700 ; genCall
   022C CD 00 00            701 	call	_push
   022F E8 02               702 	lda	sp,2(sp)
                            703 ;	rpn.c 78
                            704 ; genGoto
   0231 C3 EC 01            705 	jp	00111$
                            706 ;	rpn.c 80
                            707 ; genLabel
   0234                     708 00102$:
                            709 ; genCall
   0234 CD 39 00            710 	call	_pop
                            711 ; AOP_STK for _main_sloc0_1_0
   0237 F8 01               712 	lda	hl,1(sp)
   0239 72                  713 	ld	(hl),d
   023A 2B                  714 	dec	hl
   023B 73                  715 	ld	(hl),e
                            716 ; genCall
   023C CD 39 00            717 	call	_pop
   023F 42                  718 	ld	b,d
   0240 4B                  719 	ld	c,e
                            720 ; genPlus
                            721 ; AOP_STK for _main_sloc0_1_0
                            722 ;	genPlusIncr failed
   0241 F8 00               723 	lda	hl,0(sp)
   0243 2A                  724 	ld	a,(hl+)
   0244 66                  725 	ld	h,(hl)
   0245 6F                  726 	ld	l,a
   0246 09                  727 	add	hl,bc
   0247 4D                  728 	ld	c,l
   0248 44                  729 	ld	b,h
                            730 ; genIpush
   0249 C5                  731 	push	bc
                            732 ; genCall
   024A CD 00 00            733 	call	_push
   024D E8 02               734 	lda	sp,2(sp)
                            735 ;	rpn.c 81
                            736 ; genGoto
   024F C3 EC 01            737 	jp	00111$
                            738 ;	rpn.c 83
                            739 ; genLabel
   0252                     740 00103$:
                            741 ; genCall
   0252 CD 39 00            742 	call	_pop
                            743 ; AOP_STK for _main_sloc0_1_0
   0255 F8 01               744 	lda	hl,1(sp)
   0257 72                  745 	ld	(hl),d
   0258 2B                  746 	dec	hl
   0259 73                  747 	ld	(hl),e
                            748 ; genCall
   025A CD 39 00            749 	call	_pop
   025D 42                  750 	ld	b,d
   025E 4B                  751 	ld	c,e
                            752 ; genIpush
   025F C5                  753 	push	bc
                            754 ; genIpush
                            755 ; AOP_STK for _main_sloc0_1_0
   0260 F8 02               756 	lda	hl,2(sp)
   0262 2A                  757 	ld	a,(hl+)
   0263 66                  758 	ld	h,(hl)
   0264 6F                  759 	ld	l,a
   0265 E5                  760 	push	hl
                            761 ; genCall
   0266 CD 00 00            762 	call	__mulsint
   0269 42                  763 	ld	b,d
   026A 4B                  764 	ld	c,e
   026B E8 04               765 	lda	sp,4(sp)
                            766 ; genIpush
   026D C5                  767 	push	bc
                            768 ; genCall
   026E CD 00 00            769 	call	_push
   0271 E8 02               770 	lda	sp,2(sp)
                            771 ;	rpn.c 84
                            772 ; genGoto
   0273 C3 EC 01            773 	jp	00111$
                            774 ;	rpn.c 86
                            775 ; genLabel
   0276                     776 00104$:
                            777 ; genCall
   0276 CD 39 00            778 	call	_pop
                            779 ; AOP_STK for _main_op2_1_1
   0279 F8 03               780 	lda	hl,3(sp)
   027B 72                  781 	ld	(hl),d
   027C 2B                  782 	dec	hl
   027D 73                  783 	ld	(hl),e
                            784 ;	rpn.c 87
                            785 ; genCall
   027E CD 39 00            786 	call	_pop
   0281 42                  787 	ld	b,d
   0282 4B                  788 	ld	c,e
                            789 ; genMinus
                            790 ; AOP_STK for _main_op2_1_1
                            791 ; Removed redundent load
                            792 ; Removed redundent load
   0283 F8 02               793 	lda	hl,2(sp)
   0285 5E                  794 	ld	e,(hl)
   0286 23                  795 	inc	hl
   0287 56                  796 	ld	d,(hl)
   0288 79                  797 	ld	a,c
   0289 93                  798 	sub	a,e
   028A 5F                  799 	ld	e,a
   028B 78                  800 	ld	a,b
   028C 9A                  801 	sbc	a,d
   028D 47                  802 	ld	b,a
   028E 4B                  803 	ld	c,e
                            804 ; genIpush
   028F C5                  805 	push	bc
                            806 ; genCall
   0290 CD 00 00            807 	call	_push
   0293 E8 02               808 	lda	sp,2(sp)
                            809 ;	rpn.c 88
                            810 ; genGoto
   0295 C3 EC 01            811 	jp	00111$
                            812 ;	rpn.c 90
                            813 ; genLabel
   0298                     814 00105$:
                            815 ; genCall
   0298 CD 39 00            816 	call	_pop
                            817 ; AOP_STK for _main_op2_1_1
   029B F8 03               818 	lda	hl,3(sp)
   029D 72                  819 	ld	(hl),d
   029E 2B                  820 	dec	hl
   029F 73                  821 	ld	(hl),e
                            822 ;	rpn.c 91
                            823 ; genCmpEq
                            824 ; AOP_STK for _main_op2_1_1
   02A0 2A                  825 	ld	a,(hl+)
   02A1 B6                  826 	or	a,(hl)
                            827 ; Rule 5
   02A2 CA C1 02            828 	jp	z,00107$
   02A5                     829 00133$:
                            830 ;	rpn.c 92
                            831 ; genCall
   02A5 CD 39 00            832 	call	_pop
   02A8 42                  833 	ld	b,d
   02A9 4B                  834 	ld	c,e
                            835 ; genIpush
                            836 ; AOP_STK for _main_op2_1_1
   02AA F8 02               837 	lda	hl,2(sp)
   02AC 2A                  838 	ld	a,(hl+)
   02AD 66                  839 	ld	h,(hl)
   02AE 6F                  840 	ld	l,a
   02AF E5                  841 	push	hl
                            842 ; genIpush
   02B0 C5                  843 	push	bc
                            844 ; genCall
   02B1 CD 00 00            845 	call	__divsint
   02B4 42                  846 	ld	b,d
   02B5 4B                  847 	ld	c,e
   02B6 E8 04               848 	lda	sp,4(sp)
                            849 ; genIpush
   02B8 C5                  850 	push	bc
                            851 ; genCall
   02B9 CD 00 00            852 	call	_push
   02BC E8 02               853 	lda	sp,2(sp)
                            854 ; genGoto
   02BE C3 EC 01            855 	jp	00111$
                            856 ; genLabel
   02C1                     857 00107$:
                            858 ;	rpn.c 94
                            859 ; genIpush
   02C1 21 F2 02            860 	ld	hl,#__str_4 + 0
   02C4 E5                  861 	push	hl
                            862 ; genCall
   02C5 CD 00 00            863 	call	_puts
   02C8 E8 02               864 	lda	sp,2(sp)
                            865 ;	rpn.c 95
                            866 ; genGoto
   02CA C3 EC 01            867 	jp	00111$
                            868 ;	rpn.c 97
                            869 ; genLabel
   02CD                     870 00109$:
                            871 ; genCall
   02CD CD 75 00            872 	call	_top
   02D0 42                  873 	ld	b,d
   02D1 4B                  874 	ld	c,e
                            875 ; genIpush
   02D2 C5                  876 	push	bc
                            877 ; genIpush
   02D3 21 FE 02            878 	ld	hl,#__str_5 + 0
   02D6 E5                  879 	push	hl
                            880 ; genCall
   02D7 CD 00 00            881 	call	_printf
   02DA E8 04               882 	lda	sp,4(sp)
                            883 ;	rpn.c 99
                            884 ; genGoto
   02DC C3 EC 01            885 	jp	00111$
                            886 ; genLabel
   02DF                     887 00114$:
                            888 ; genEndFunction
   02DF E8 04               889 	lda	sp,4(sp)
   02E1 C1                  890 	pop	bc
   02E2 C9                  891 	ret
   02E3                     892 ___main_end:
   02E3                     893 __str_3:
   02E3 52 50 4E 20 43 61   894 	.ascii "RPN Calculator"
        6C 63 75 6C 61 74
        6F 72
   02F1 00                  895 	.db 0x00
   02F2                     896 __str_4:
   02F2 44 69 76 69 64 65   897 	.ascii "Divide by 0"
        20 62 79 20 30
   02FD 00                  898 	.db 0x00
   02FE                     899 __str_5:
   02FE 3D 3D 3E 20 25 64   900 	.ascii "==> %d"
   0304 0A                  901 	.db 0x0A
   0305 00                  902 	.db 0x00
                            903 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___main_end                        02E3 R
  0 ___main_start                      01D6 R
  0 ___pop_end                         0069 R
  0 ___pop_start                       0039 R
  0 ___push_end                        002E R
  0 ___push_start                      0000 R
  0 ___read_op_end                     01D6 R
  0 ___read_op_start                   00B4 R
  0 ___top_end                         00A8 R
  0 ___top_start                       0075 R
    __divsint                          **** GX
    __mulsint                          **** GX
  0 __str_0                            002E R
  0 __str_1                            0069 R
  0 __str_2                            00A8 R
  0 __str_3                            02E3 R
  0 __str_4                            02F2 R
  0 __str_5                            02FE R
    _gets                              **** GX
    _isdigit                           **** GX
  0 _main                              01D6 GR
  1 _n                                 007A GR
  0 _pop                               0039 GR
  1 _pos                               0079 GR
    _printf                            **** GX
  0 _push                              0000 GR
    _puts                              **** GX
  0 _read_op                           00B4 GR
  1 _s                                 0051 GR
  1 _sp                                0000 GR
  1 _stack                             0001 GR
  0 _top                               0075 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  306   flags 0
   1 _DATA                              size   7C   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    0   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
